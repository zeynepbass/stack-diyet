{"ast":null,"code":"'use strict';\n\nlet {\n  nanoid\n} = require('nanoid/non-secure');\nlet {\n  isAbsolute,\n  resolve\n} = require('path');\nlet {\n  SourceMapConsumer,\n  SourceMapGenerator\n} = require('source-map-js');\nlet {\n  fileURLToPath,\n  pathToFileURL\n} = require('url');\nlet CssSyntaxError = require('./css-syntax-error');\nlet PreviousMap = require('./previous-map');\nlet terminalHighlight = require('./terminal-highlight');\nlet fromOffsetCache = Symbol('fromOffsetCache');\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator);\nlet pathAvailable = Boolean(resolve && isAbsolute);\nclass Input {\n  get from() {\n    return this.file || this.id;\n  }\n  constructor(css, opts = {}) {\n    if (css === null || typeof css === 'undefined' || typeof css === 'object' && !css.toString) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`);\n    }\n    this.css = css.toString();\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true;\n      this.css = this.css.slice(1);\n    } else {\n      this.hasBOM = false;\n    }\n    this.document = this.css;\n    if (opts.document) this.document = opts.document.toString();\n    if (opts.from) {\n      if (!pathAvailable || /^\\w+:\\/\\//.test(opts.from) || isAbsolute(opts.from)) {\n        this.file = opts.from;\n      } else {\n        this.file = resolve(opts.from);\n      }\n    }\n    if (pathAvailable && sourceMapAvailable) {\n      let map = new PreviousMap(this.css, opts);\n      if (map.text) {\n        this.map = map;\n        let file = map.consumer().file;\n        if (!this.file && file) this.file = this.mapResolve(file);\n      }\n    }\n    if (!this.file) {\n      this.id = '<input css ' + nanoid(6) + '>';\n    }\n    if (this.map) this.map.file = this.from;\n  }\n  error(message, line, column, opts = {}) {\n    let endColumn, endLine, result;\n    if (line && typeof line === 'object') {\n      let start = line;\n      let end = column;\n      if (typeof start.offset === 'number') {\n        let pos = this.fromOffset(start.offset);\n        line = pos.line;\n        column = pos.col;\n      } else {\n        line = start.line;\n        column = start.column;\n      }\n      if (typeof end.offset === 'number') {\n        let pos = this.fromOffset(end.offset);\n        endLine = pos.line;\n        endColumn = pos.col;\n      } else {\n        endLine = end.line;\n        endColumn = end.column;\n      }\n    } else if (!column) {\n      let pos = this.fromOffset(line);\n      line = pos.line;\n      column = pos.col;\n    }\n    let origin = this.origin(line, column, endLine, endColumn);\n    if (origin) {\n      result = new CssSyntaxError(message, origin.endLine === undefined ? origin.line : {\n        column: origin.column,\n        line: origin.line\n      }, origin.endLine === undefined ? origin.column : {\n        column: origin.endColumn,\n        line: origin.endLine\n      }, origin.source, origin.file, opts.plugin);\n    } else {\n      result = new CssSyntaxError(message, endLine === undefined ? line : {\n        column,\n        line\n      }, endLine === undefined ? column : {\n        column: endColumn,\n        line: endLine\n      }, this.css, this.file, opts.plugin);\n    }\n    result.input = {\n      column,\n      endColumn,\n      endLine,\n      line,\n      source: this.css\n    };\n    if (this.file) {\n      if (pathToFileURL) {\n        result.input.url = pathToFileURL(this.file).toString();\n      }\n      result.input.file = this.file;\n    }\n    return result;\n  }\n  fromOffset(offset) {\n    let lastLine, lineToIndex;\n    if (!this[fromOffsetCache]) {\n      let lines = this.css.split('\\n');\n      lineToIndex = new Array(lines.length);\n      let prevIndex = 0;\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex;\n        prevIndex += lines[i].length + 1;\n      }\n      this[fromOffsetCache] = lineToIndex;\n    } else {\n      lineToIndex = this[fromOffsetCache];\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1];\n    let min = 0;\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1;\n    } else {\n      let max = lineToIndex.length - 2;\n      let mid;\n      while (min < max) {\n        mid = min + (max - min >> 1);\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1;\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1;\n        } else {\n          min = mid;\n          break;\n        }\n      }\n    }\n    return {\n      col: offset - lineToIndex[min] + 1,\n      line: min + 1\n    };\n  }\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file;\n    }\n    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file);\n  }\n  origin(line, column, endLine, endColumn) {\n    if (!this.map) return false;\n    let consumer = this.map.consumer();\n    let from = consumer.originalPositionFor({\n      column,\n      line\n    });\n    if (!from.source) return false;\n    let to;\n    if (typeof endLine === 'number') {\n      to = consumer.originalPositionFor({\n        column: endColumn,\n        line: endLine\n      });\n    }\n    let fromUrl;\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL(from.source);\n    } else {\n      fromUrl = new URL(from.source, this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile));\n    }\n    let result = {\n      column: from.column,\n      endColumn: to && to.column,\n      endLine: to && to.line,\n      line: from.line,\n      url: fromUrl.toString()\n    };\n    if (fromUrl.protocol === 'file:') {\n      if (fileURLToPath) {\n        result.file = fileURLToPath(fromUrl);\n      } else {\n        /* c8 ignore next 2 */\n        throw new Error(`file: protocol is not available in this PostCSS build`);\n      }\n    }\n    let source = consumer.sourceContentFor(from.source);\n    if (source) result.source = source;\n    return result;\n  }\n  toJSON() {\n    let json = {};\n    for (let name of ['hasBOM', 'css', 'file', 'id']) {\n      if (this[name] != null) {\n        json[name] = this[name];\n      }\n    }\n    if (this.map) {\n      json.map = {\n        ...this.map\n      };\n      if (json.map.consumerCache) {\n        json.map.consumerCache = undefined;\n      }\n    }\n    return json;\n  }\n}\nmodule.exports = Input;\nInput.default = Input;\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input);\n}","map":{"version":3,"names":["nanoid","require","isAbsolute","resolve","SourceMapConsumer","SourceMapGenerator","fileURLToPath","pathToFileURL","CssSyntaxError","PreviousMap","terminalHighlight","fromOffsetCache","Symbol","sourceMapAvailable","Boolean","pathAvailable","Input","from","file","id","constructor","css","opts","toString","Error","hasBOM","slice","document","test","map","text","consumer","mapResolve","error","message","line","column","endColumn","endLine","result","start","end","offset","pos","fromOffset","col","origin","undefined","source","plugin","input","url","lastLine","lineToIndex","lines","split","Array","length","prevIndex","i","l","min","max","mid","sourceRoot","root","originalPositionFor","to","fromUrl","URL","mapFile","protocol","sourceContentFor","toJSON","json","name","consumerCache","module","exports","default","registerInput"],"sources":["/Users/zeynepbas/Desktop/stackowerflow/node_modules/postcss/lib/input.js"],"sourcesContent":["'use strict'\n\nlet { nanoid } = require('nanoid/non-secure')\nlet { isAbsolute, resolve } = require('path')\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { fileURLToPath, pathToFileURL } = require('url')\n\nlet CssSyntaxError = require('./css-syntax-error')\nlet PreviousMap = require('./previous-map')\nlet terminalHighlight = require('./terminal-highlight')\n\nlet fromOffsetCache = Symbol('fromOffsetCache')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(resolve && isAbsolute)\n\nclass Input {\n  get from() {\n    return this.file || this.id\n  }\n\n  constructor(css, opts = {}) {\n    if (\n      css === null ||\n      typeof css === 'undefined' ||\n      (typeof css === 'object' && !css.toString)\n    ) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`)\n    }\n\n    this.css = css.toString()\n\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true\n      this.css = this.css.slice(1)\n    } else {\n      this.hasBOM = false\n    }\n\n    this.document = this.css\n    if (opts.document) this.document = opts.document.toString()\n\n    if (opts.from) {\n      if (\n        !pathAvailable ||\n        /^\\w+:\\/\\//.test(opts.from) ||\n        isAbsolute(opts.from)\n      ) {\n        this.file = opts.from\n      } else {\n        this.file = resolve(opts.from)\n      }\n    }\n\n    if (pathAvailable && sourceMapAvailable) {\n      let map = new PreviousMap(this.css, opts)\n      if (map.text) {\n        this.map = map\n        let file = map.consumer().file\n        if (!this.file && file) this.file = this.mapResolve(file)\n      }\n    }\n\n    if (!this.file) {\n      this.id = '<input css ' + nanoid(6) + '>'\n    }\n    if (this.map) this.map.file = this.from\n  }\n\n  error(message, line, column, opts = {}) {\n    let endColumn, endLine, result\n\n    if (line && typeof line === 'object') {\n      let start = line\n      let end = column\n      if (typeof start.offset === 'number') {\n        let pos = this.fromOffset(start.offset)\n        line = pos.line\n        column = pos.col\n      } else {\n        line = start.line\n        column = start.column\n      }\n      if (typeof end.offset === 'number') {\n        let pos = this.fromOffset(end.offset)\n        endLine = pos.line\n        endColumn = pos.col\n      } else {\n        endLine = end.line\n        endColumn = end.column\n      }\n    } else if (!column) {\n      let pos = this.fromOffset(line)\n      line = pos.line\n      column = pos.col\n    }\n\n    let origin = this.origin(line, column, endLine, endColumn)\n    if (origin) {\n      result = new CssSyntaxError(\n        message,\n        origin.endLine === undefined\n          ? origin.line\n          : { column: origin.column, line: origin.line },\n        origin.endLine === undefined\n          ? origin.column\n          : { column: origin.endColumn, line: origin.endLine },\n        origin.source,\n        origin.file,\n        opts.plugin\n      )\n    } else {\n      result = new CssSyntaxError(\n        message,\n        endLine === undefined ? line : { column, line },\n        endLine === undefined ? column : { column: endColumn, line: endLine },\n        this.css,\n        this.file,\n        opts.plugin\n      )\n    }\n\n    result.input = { column, endColumn, endLine, line, source: this.css }\n    if (this.file) {\n      if (pathToFileURL) {\n        result.input.url = pathToFileURL(this.file).toString()\n      }\n      result.input.file = this.file\n    }\n\n    return result\n  }\n\n  fromOffset(offset) {\n    let lastLine, lineToIndex\n    if (!this[fromOffsetCache]) {\n      let lines = this.css.split('\\n')\n      lineToIndex = new Array(lines.length)\n      let prevIndex = 0\n\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex\n        prevIndex += lines[i].length + 1\n      }\n\n      this[fromOffsetCache] = lineToIndex\n    } else {\n      lineToIndex = this[fromOffsetCache]\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1]\n\n    let min = 0\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1\n    } else {\n      let max = lineToIndex.length - 2\n      let mid\n      while (min < max) {\n        mid = min + ((max - min) >> 1)\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1\n        } else {\n          min = mid\n          break\n        }\n      }\n    }\n    return {\n      col: offset - lineToIndex[min] + 1,\n      line: min + 1\n    }\n  }\n\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file\n    }\n    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file)\n  }\n\n  origin(line, column, endLine, endColumn) {\n    if (!this.map) return false\n    let consumer = this.map.consumer()\n\n    let from = consumer.originalPositionFor({ column, line })\n    if (!from.source) return false\n\n    let to\n    if (typeof endLine === 'number') {\n      to = consumer.originalPositionFor({ column: endColumn, line: endLine })\n    }\n\n    let fromUrl\n\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL(from.source)\n    } else {\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)\n      )\n    }\n\n    let result = {\n      column: from.column,\n      endColumn: to && to.column,\n      endLine: to && to.line,\n      line: from.line,\n      url: fromUrl.toString()\n    }\n\n    if (fromUrl.protocol === 'file:') {\n      if (fileURLToPath) {\n        result.file = fileURLToPath(fromUrl)\n      } else {\n        /* c8 ignore next 2 */\n        throw new Error(`file: protocol is not available in this PostCSS build`)\n      }\n    }\n\n    let source = consumer.sourceContentFor(from.source)\n    if (source) result.source = source\n\n    return result\n  }\n\n  toJSON() {\n    let json = {}\n    for (let name of ['hasBOM', 'css', 'file', 'id']) {\n      if (this[name] != null) {\n        json[name] = this[name]\n      }\n    }\n    if (this.map) {\n      json.map = { ...this.map }\n      if (json.map.consumerCache) {\n        json.map.consumerCache = undefined\n      }\n    }\n    return json\n  }\n}\n\nmodule.exports = Input\nInput.default = Input\n\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input)\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}