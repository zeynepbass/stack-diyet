{"ast":null,"code":"'use strict';\n\nlet Container = require('./container');\nlet Document = require('./document');\nlet MapGenerator = require('./map-generator');\nlet parse = require('./parse');\nlet Result = require('./result');\nlet Root = require('./root');\nlet stringify = require('./stringify');\nlet {\n  isClean,\n  my\n} = require('./symbols');\nlet warnOnce = require('./warn-once');\nconst TYPE_TO_CLASS_NAME = {\n  atrule: 'AtRule',\n  comment: 'Comment',\n  decl: 'Declaration',\n  document: 'Document',\n  root: 'Root',\n  rule: 'Rule'\n};\nconst PLUGIN_PROPS = {\n  AtRule: true,\n  AtRuleExit: true,\n  Comment: true,\n  CommentExit: true,\n  Declaration: true,\n  DeclarationExit: true,\n  Document: true,\n  DocumentExit: true,\n  Once: true,\n  OnceExit: true,\n  postcssPlugin: true,\n  prepare: true,\n  Root: true,\n  RootExit: true,\n  Rule: true,\n  RuleExit: true\n};\nconst NOT_VISITORS = {\n  Once: true,\n  postcssPlugin: true,\n  prepare: true\n};\nconst CHILDREN = 0;\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function';\n}\nfunction getEvents(node) {\n  let key = false;\n  let type = TYPE_TO_CLASS_NAME[node.type];\n  if (node.type === 'decl') {\n    key = node.prop.toLowerCase();\n  } else if (node.type === 'atrule') {\n    key = node.name.toLowerCase();\n  }\n  if (key && node.append) {\n    return [type, type + '-' + key, CHILDREN, type + 'Exit', type + 'Exit-' + key];\n  } else if (key) {\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key];\n  } else if (node.append) {\n    return [type, CHILDREN, type + 'Exit'];\n  } else {\n    return [type, type + 'Exit'];\n  }\n}\nfunction toStack(node) {\n  let events;\n  if (node.type === 'document') {\n    events = ['Document', CHILDREN, 'DocumentExit'];\n  } else if (node.type === 'root') {\n    events = ['Root', CHILDREN, 'RootExit'];\n  } else {\n    events = getEvents(node);\n  }\n  return {\n    eventIndex: 0,\n    events,\n    iterator: 0,\n    node,\n    visitorIndex: 0,\n    visitors: []\n  };\n}\nfunction cleanMarks(node) {\n  node[isClean] = false;\n  if (node.nodes) node.nodes.forEach(i => cleanMarks(i));\n  return node;\n}\nlet postcss = {};\nclass LazyResult {\n  get content() {\n    return this.stringify().content;\n  }\n  get css() {\n    return this.stringify().css;\n  }\n  get map() {\n    return this.stringify().map;\n  }\n  get messages() {\n    return this.sync().messages;\n  }\n  get opts() {\n    return this.result.opts;\n  }\n  get processor() {\n    return this.result.processor;\n  }\n  get root() {\n    return this.sync().root;\n  }\n  get [Symbol.toStringTag]() {\n    return 'LazyResult';\n  }\n  constructor(processor, css, opts) {\n    this.stringified = false;\n    this.processed = false;\n    let root;\n    if (typeof css === 'object' && css !== null && (css.type === 'root' || css.type === 'document')) {\n      root = cleanMarks(css);\n    } else if (css instanceof LazyResult || css instanceof Result) {\n      root = cleanMarks(css.root);\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {};\n        if (!opts.map.inline) opts.map.inline = false;\n        opts.map.prev = css.map;\n      }\n    } else {\n      let parser = parse;\n      if (opts.syntax) parser = opts.syntax.parse;\n      if (opts.parser) parser = opts.parser;\n      if (parser.parse) parser = parser.parse;\n      try {\n        root = parser(css, opts);\n      } catch (error) {\n        this.processed = true;\n        this.error = error;\n      }\n      if (root && !root[my]) {\n        /* c8 ignore next 2 */\n        Container.rebuild(root);\n      }\n    }\n    this.result = new Result(processor, root, opts);\n    this.helpers = {\n      ...postcss,\n      postcss,\n      result: this.result\n    };\n    this.plugins = this.processor.plugins.map(plugin => {\n      if (typeof plugin === 'object' && plugin.prepare) {\n        return {\n          ...plugin,\n          ...plugin.prepare(this.result)\n        };\n      } else {\n        return plugin;\n      }\n    });\n  }\n  async() {\n    if (this.error) return Promise.reject(this.error);\n    if (this.processed) return Promise.resolve(this.result);\n    if (!this.processing) {\n      this.processing = this.runAsync();\n    }\n    return this.processing;\n  }\n  catch(onRejected) {\n    return this.async().catch(onRejected);\n  }\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally);\n  }\n  getAsyncError() {\n    throw new Error('Use process(css).then(cb) to work with async plugins');\n  }\n  handleError(error, node) {\n    let plugin = this.result.lastPlugin;\n    try {\n      if (node) node.addToError(error);\n      this.error = error;\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin;\n        error.setMessage();\n      } else if (plugin.postcssVersion) {\n        if (process.env.NODE_ENV !== 'production') {\n          let pluginName = plugin.postcssPlugin;\n          let pluginVer = plugin.postcssVersion;\n          let runtimeVer = this.result.processor.version;\n          let a = pluginVer.split('.');\n          let b = runtimeVer.split('.');\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            // eslint-disable-next-line no-console\n            console.error('Unknown error from PostCSS plugin. Your current PostCSS ' + 'version is ' + runtimeVer + ', but ' + pluginName + ' uses ' + pluginVer + '. Perhaps this is the source of the error below.');\n          }\n        }\n      }\n    } catch (err) {\n      /* c8 ignore next 3 */\n      // eslint-disable-next-line no-console\n      if (console && console.error) console.error(err);\n    }\n    return error;\n  }\n  prepareVisitors() {\n    this.listeners = {};\n    let add = (plugin, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = [];\n      this.listeners[type].push([plugin, cb]);\n    };\n    for (let plugin of this.plugins) {\n      if (typeof plugin === 'object') {\n        for (let event in plugin) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(`Unknown event ${event} in ${plugin.postcssPlugin}. ` + `Try to update PostCSS (${this.processor.version} now).`);\n          }\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin[event] === 'object') {\n              for (let filter in plugin[event]) {\n                if (filter === '*') {\n                  add(plugin, event, plugin[event][filter]);\n                } else {\n                  add(plugin, event + '-' + filter.toLowerCase(), plugin[event][filter]);\n                }\n              }\n            } else if (typeof plugin[event] === 'function') {\n              add(plugin, event, plugin[event]);\n            }\n          }\n        }\n      }\n    }\n    this.hasListener = Object.keys(this.listeners).length > 0;\n  }\n  async runAsync() {\n    this.plugin = 0;\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin = this.plugins[i];\n      let promise = this.runOnRoot(plugin);\n      if (isPromise(promise)) {\n        try {\n          await promise;\n        } catch (error) {\n          throw this.handleError(error);\n        }\n      }\n    }\n    this.prepareVisitors();\n    if (this.hasListener) {\n      let root = this.result.root;\n      while (!root[isClean]) {\n        root[isClean] = true;\n        let stack = [toStack(root)];\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack);\n          if (isPromise(promise)) {\n            try {\n              await promise;\n            } catch (e) {\n              let node = stack[stack.length - 1].node;\n              throw this.handleError(e, node);\n            }\n          }\n        }\n      }\n      if (this.listeners.OnceExit) {\n        for (let [plugin, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin;\n          try {\n            if (root.type === 'document') {\n              let roots = root.nodes.map(subRoot => visitor(subRoot, this.helpers));\n              await Promise.all(roots);\n            } else {\n              await visitor(root, this.helpers);\n            }\n          } catch (e) {\n            throw this.handleError(e);\n          }\n        }\n      }\n    }\n    this.processed = true;\n    return this.stringify();\n  }\n  runOnRoot(plugin) {\n    this.result.lastPlugin = plugin;\n    try {\n      if (typeof plugin === 'object' && plugin.Once) {\n        if (this.result.root.type === 'document') {\n          let roots = this.result.root.nodes.map(root => plugin.Once(root, this.helpers));\n          if (isPromise(roots[0])) {\n            return Promise.all(roots);\n          }\n          return roots;\n        }\n        return plugin.Once(this.result.root, this.helpers);\n      } else if (typeof plugin === 'function') {\n        return plugin(this.result.root, this.result);\n      }\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n  stringify() {\n    if (this.error) throw this.error;\n    if (this.stringified) return this.result;\n    this.stringified = true;\n    this.sync();\n    let opts = this.result.opts;\n    let str = stringify;\n    if (opts.syntax) str = opts.syntax.stringify;\n    if (opts.stringifier) str = opts.stringifier;\n    if (str.stringify) str = str.stringify;\n    let map = new MapGenerator(str, this.result.root, this.result.opts);\n    let data = map.generate();\n    this.result.css = data[0];\n    this.result.map = data[1];\n    return this.result;\n  }\n  sync() {\n    if (this.error) throw this.error;\n    if (this.processed) return this.result;\n    this.processed = true;\n    if (this.processing) {\n      throw this.getAsyncError();\n    }\n    for (let plugin of this.plugins) {\n      let promise = this.runOnRoot(plugin);\n      if (isPromise(promise)) {\n        throw this.getAsyncError();\n      }\n    }\n    this.prepareVisitors();\n    if (this.hasListener) {\n      let root = this.result.root;\n      while (!root[isClean]) {\n        root[isClean] = true;\n        this.walkSync(root);\n      }\n      if (this.listeners.OnceExit) {\n        if (root.type === 'document') {\n          for (let subRoot of root.nodes) {\n            this.visitSync(this.listeners.OnceExit, subRoot);\n          }\n        } else {\n          this.visitSync(this.listeners.OnceExit, root);\n        }\n      }\n    }\n    return this.result;\n  }\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this.opts)) {\n        warnOnce('Without `from` option PostCSS could generate wrong source map ' + 'and will not find Browserslist config. Set it to CSS file path ' + 'or to `undefined` to prevent this warning.');\n      }\n    }\n    return this.async().then(onFulfilled, onRejected);\n  }\n  toString() {\n    return this.css;\n  }\n  visitSync(visitors, node) {\n    for (let [plugin, visitor] of visitors) {\n      this.result.lastPlugin = plugin;\n      let promise;\n      try {\n        promise = visitor(node, this.helpers);\n      } catch (e) {\n        throw this.handleError(e, node.proxyOf);\n      }\n      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n        return true;\n      }\n      if (isPromise(promise)) {\n        throw this.getAsyncError();\n      }\n    }\n  }\n  visitTick(stack) {\n    let visit = stack[stack.length - 1];\n    let {\n      node,\n      visitors\n    } = visit;\n    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n      stack.pop();\n      return;\n    }\n    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n      let [plugin, visitor] = visitors[visit.visitorIndex];\n      visit.visitorIndex += 1;\n      if (visit.visitorIndex === visitors.length) {\n        visit.visitors = [];\n        visit.visitorIndex = 0;\n      }\n      this.result.lastPlugin = plugin;\n      try {\n        return visitor(node.toProxy(), this.helpers);\n      } catch (e) {\n        throw this.handleError(e, node);\n      }\n    }\n    if (visit.iterator !== 0) {\n      let iterator = visit.iterator;\n      let child;\n      while (child = node.nodes[node.indexes[iterator]]) {\n        node.indexes[iterator] += 1;\n        if (!child[isClean]) {\n          child[isClean] = true;\n          stack.push(toStack(child));\n          return;\n        }\n      }\n      visit.iterator = 0;\n      delete node.indexes[iterator];\n    }\n    let events = visit.events;\n    while (visit.eventIndex < events.length) {\n      let event = events[visit.eventIndex];\n      visit.eventIndex += 1;\n      if (event === CHILDREN) {\n        if (node.nodes && node.nodes.length) {\n          node[isClean] = true;\n          visit.iterator = node.getIterator();\n        }\n        return;\n      } else if (this.listeners[event]) {\n        visit.visitors = this.listeners[event];\n        return;\n      }\n    }\n    stack.pop();\n  }\n  walkSync(node) {\n    node[isClean] = true;\n    let events = getEvents(node);\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node.nodes) {\n          node.each(child => {\n            if (!child[isClean]) this.walkSync(child);\n          });\n        }\n      } else {\n        let visitors = this.listeners[event];\n        if (visitors) {\n          if (this.visitSync(visitors, node.toProxy())) return;\n        }\n      }\n    }\n  }\n  warnings() {\n    return this.sync().warnings();\n  }\n}\nLazyResult.registerPostcss = dependant => {\n  postcss = dependant;\n};\nmodule.exports = LazyResult;\nLazyResult.default = LazyResult;\nRoot.registerLazyResult(LazyResult);\nDocument.registerLazyResult(LazyResult);","map":{"version":3,"names":["Container","require","Document","MapGenerator","parse","Result","Root","stringify","isClean","my","warnOnce","TYPE_TO_CLASS_NAME","atrule","comment","decl","document","root","rule","PLUGIN_PROPS","AtRule","AtRuleExit","Comment","CommentExit","Declaration","DeclarationExit","DocumentExit","Once","OnceExit","postcssPlugin","prepare","RootExit","Rule","RuleExit","NOT_VISITORS","CHILDREN","isPromise","obj","then","getEvents","node","key","type","prop","toLowerCase","name","append","toStack","events","eventIndex","iterator","visitorIndex","visitors","cleanMarks","nodes","forEach","i","postcss","LazyResult","content","css","map","messages","sync","opts","result","processor","Symbol","toStringTag","constructor","stringified","processed","inline","prev","parser","syntax","error","rebuild","helpers","plugins","plugin","async","Promise","reject","resolve","processing","runAsync","catch","onRejected","finally","onFinally","getAsyncError","Error","handleError","lastPlugin","addToError","setMessage","postcssVersion","process","env","NODE_ENV","pluginName","pluginVer","runtimeVer","version","a","split","b","parseInt","console","err","prepareVisitors","listeners","add","cb","push","event","test","filter","hasListener","Object","keys","length","promise","runOnRoot","stack","visitTick","e","visitor","roots","subRoot","all","str","stringifier","data","generate","walkSync","visitSync","onFulfilled","toString","proxyOf","parent","visit","pop","toProxy","child","indexes","getIterator","each","warnings","registerPostcss","dependant","module","exports","default","registerLazyResult"],"sources":["/Users/zeynepbas/Desktop/stackowerflow/node_modules/postcss/lib/lazy-result.js"],"sourcesContent":["'use strict'\n\nlet Container = require('./container')\nlet Document = require('./document')\nlet MapGenerator = require('./map-generator')\nlet parse = require('./parse')\nlet Result = require('./result')\nlet Root = require('./root')\nlet stringify = require('./stringify')\nlet { isClean, my } = require('./symbols')\nlet warnOnce = require('./warn-once')\n\nconst TYPE_TO_CLASS_NAME = {\n  atrule: 'AtRule',\n  comment: 'Comment',\n  decl: 'Declaration',\n  document: 'Document',\n  root: 'Root',\n  rule: 'Rule'\n}\n\nconst PLUGIN_PROPS = {\n  AtRule: true,\n  AtRuleExit: true,\n  Comment: true,\n  CommentExit: true,\n  Declaration: true,\n  DeclarationExit: true,\n  Document: true,\n  DocumentExit: true,\n  Once: true,\n  OnceExit: true,\n  postcssPlugin: true,\n  prepare: true,\n  Root: true,\n  RootExit: true,\n  Rule: true,\n  RuleExit: true\n}\n\nconst NOT_VISITORS = {\n  Once: true,\n  postcssPlugin: true,\n  prepare: true\n}\n\nconst CHILDREN = 0\n\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function'\n}\n\nfunction getEvents(node) {\n  let key = false\n  let type = TYPE_TO_CLASS_NAME[node.type]\n  if (node.type === 'decl') {\n    key = node.prop.toLowerCase()\n  } else if (node.type === 'atrule') {\n    key = node.name.toLowerCase()\n  }\n\n  if (key && node.append) {\n    return [\n      type,\n      type + '-' + key,\n      CHILDREN,\n      type + 'Exit',\n      type + 'Exit-' + key\n    ]\n  } else if (key) {\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]\n  } else if (node.append) {\n    return [type, CHILDREN, type + 'Exit']\n  } else {\n    return [type, type + 'Exit']\n  }\n}\n\nfunction toStack(node) {\n  let events\n  if (node.type === 'document') {\n    events = ['Document', CHILDREN, 'DocumentExit']\n  } else if (node.type === 'root') {\n    events = ['Root', CHILDREN, 'RootExit']\n  } else {\n    events = getEvents(node)\n  }\n\n  return {\n    eventIndex: 0,\n    events,\n    iterator: 0,\n    node,\n    visitorIndex: 0,\n    visitors: []\n  }\n}\n\nfunction cleanMarks(node) {\n  node[isClean] = false\n  if (node.nodes) node.nodes.forEach(i => cleanMarks(i))\n  return node\n}\n\nlet postcss = {}\n\nclass LazyResult {\n  get content() {\n    return this.stringify().content\n  }\n\n  get css() {\n    return this.stringify().css\n  }\n\n  get map() {\n    return this.stringify().map\n  }\n\n  get messages() {\n    return this.sync().messages\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get root() {\n    return this.sync().root\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'LazyResult'\n  }\n\n  constructor(processor, css, opts) {\n    this.stringified = false\n    this.processed = false\n\n    let root\n    if (\n      typeof css === 'object' &&\n      css !== null &&\n      (css.type === 'root' || css.type === 'document')\n    ) {\n      root = cleanMarks(css)\n    } else if (css instanceof LazyResult || css instanceof Result) {\n      root = cleanMarks(css.root)\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {}\n        if (!opts.map.inline) opts.map.inline = false\n        opts.map.prev = css.map\n      }\n    } else {\n      let parser = parse\n      if (opts.syntax) parser = opts.syntax.parse\n      if (opts.parser) parser = opts.parser\n      if (parser.parse) parser = parser.parse\n\n      try {\n        root = parser(css, opts)\n      } catch (error) {\n        this.processed = true\n        this.error = error\n      }\n\n      if (root && !root[my]) {\n        /* c8 ignore next 2 */\n        Container.rebuild(root)\n      }\n    }\n\n    this.result = new Result(processor, root, opts)\n    this.helpers = { ...postcss, postcss, result: this.result }\n    this.plugins = this.processor.plugins.map(plugin => {\n      if (typeof plugin === 'object' && plugin.prepare) {\n        return { ...plugin, ...plugin.prepare(this.result) }\n      } else {\n        return plugin\n      }\n    })\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    if (this.processed) return Promise.resolve(this.result)\n    if (!this.processing) {\n      this.processing = this.runAsync()\n    }\n    return this.processing\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  getAsyncError() {\n    throw new Error('Use process(css).then(cb) to work with async plugins')\n  }\n\n  handleError(error, node) {\n    let plugin = this.result.lastPlugin\n    try {\n      if (node) node.addToError(error)\n      this.error = error\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin\n        error.setMessage()\n      } else if (plugin.postcssVersion) {\n        if (process.env.NODE_ENV !== 'production') {\n          let pluginName = plugin.postcssPlugin\n          let pluginVer = plugin.postcssVersion\n          let runtimeVer = this.result.processor.version\n          let a = pluginVer.split('.')\n          let b = runtimeVer.split('.')\n\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            // eslint-disable-next-line no-console\n            console.error(\n              'Unknown error from PostCSS plugin. Your current PostCSS ' +\n                'version is ' +\n                runtimeVer +\n                ', but ' +\n                pluginName +\n                ' uses ' +\n                pluginVer +\n                '. Perhaps this is the source of the error below.'\n            )\n          }\n        }\n      }\n    } catch (err) {\n      /* c8 ignore next 3 */\n      // eslint-disable-next-line no-console\n      if (console && console.error) console.error(err)\n    }\n    return error\n  }\n\n  prepareVisitors() {\n    this.listeners = {}\n    let add = (plugin, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = []\n      this.listeners[type].push([plugin, cb])\n    }\n    for (let plugin of this.plugins) {\n      if (typeof plugin === 'object') {\n        for (let event in plugin) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(\n              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +\n                `Try to update PostCSS (${this.processor.version} now).`\n            )\n          }\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin[event] === 'object') {\n              for (let filter in plugin[event]) {\n                if (filter === '*') {\n                  add(plugin, event, plugin[event][filter])\n                } else {\n                  add(\n                    plugin,\n                    event + '-' + filter.toLowerCase(),\n                    plugin[event][filter]\n                  )\n                }\n              }\n            } else if (typeof plugin[event] === 'function') {\n              add(plugin, event, plugin[event])\n            }\n          }\n        }\n      }\n    }\n    this.hasListener = Object.keys(this.listeners).length > 0\n  }\n\n  async runAsync() {\n    this.plugin = 0\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin = this.plugins[i]\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        try {\n          await promise\n        } catch (error) {\n          throw this.handleError(error)\n        }\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        let stack = [toStack(root)]\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack)\n          if (isPromise(promise)) {\n            try {\n              await promise\n            } catch (e) {\n              let node = stack[stack.length - 1].node\n              throw this.handleError(e, node)\n            }\n          }\n        }\n      }\n\n      if (this.listeners.OnceExit) {\n        for (let [plugin, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin\n          try {\n            if (root.type === 'document') {\n              let roots = root.nodes.map(subRoot =>\n                visitor(subRoot, this.helpers)\n              )\n\n              await Promise.all(roots)\n            } else {\n              await visitor(root, this.helpers)\n            }\n          } catch (e) {\n            throw this.handleError(e)\n          }\n        }\n      }\n    }\n\n    this.processed = true\n    return this.stringify()\n  }\n\n  runOnRoot(plugin) {\n    this.result.lastPlugin = plugin\n    try {\n      if (typeof plugin === 'object' && plugin.Once) {\n        if (this.result.root.type === 'document') {\n          let roots = this.result.root.nodes.map(root =>\n            plugin.Once(root, this.helpers)\n          )\n\n          if (isPromise(roots[0])) {\n            return Promise.all(roots)\n          }\n\n          return roots\n        }\n\n        return plugin.Once(this.result.root, this.helpers)\n      } else if (typeof plugin === 'function') {\n        return plugin(this.result.root, this.result)\n      }\n    } catch (error) {\n      throw this.handleError(error)\n    }\n  }\n\n  stringify() {\n    if (this.error) throw this.error\n    if (this.stringified) return this.result\n    this.stringified = true\n\n    this.sync()\n\n    let opts = this.result.opts\n    let str = stringify\n    if (opts.syntax) str = opts.syntax.stringify\n    if (opts.stringifier) str = opts.stringifier\n    if (str.stringify) str = str.stringify\n\n    let map = new MapGenerator(str, this.result.root, this.result.opts)\n    let data = map.generate()\n    this.result.css = data[0]\n    this.result.map = data[1]\n\n    return this.result\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    if (this.processed) return this.result\n    this.processed = true\n\n    if (this.processing) {\n      throw this.getAsyncError()\n    }\n\n    for (let plugin of this.plugins) {\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        this.walkSync(root)\n      }\n      if (this.listeners.OnceExit) {\n        if (root.type === 'document') {\n          for (let subRoot of root.nodes) {\n            this.visitSync(this.listeners.OnceExit, subRoot)\n          }\n        } else {\n          this.visitSync(this.listeners.OnceExit, root)\n        }\n      }\n    }\n\n    return this.result\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this.opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  toString() {\n    return this.css\n  }\n\n  visitSync(visitors, node) {\n    for (let [plugin, visitor] of visitors) {\n      this.result.lastPlugin = plugin\n      let promise\n      try {\n        promise = visitor(node, this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node.proxyOf)\n      }\n      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n        return true\n      }\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n  }\n\n  visitTick(stack) {\n    let visit = stack[stack.length - 1]\n    let { node, visitors } = visit\n\n    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n      stack.pop()\n      return\n    }\n\n    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n      let [plugin, visitor] = visitors[visit.visitorIndex]\n      visit.visitorIndex += 1\n      if (visit.visitorIndex === visitors.length) {\n        visit.visitors = []\n        visit.visitorIndex = 0\n      }\n      this.result.lastPlugin = plugin\n      try {\n        return visitor(node.toProxy(), this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node)\n      }\n    }\n\n    if (visit.iterator !== 0) {\n      let iterator = visit.iterator\n      let child\n      while ((child = node.nodes[node.indexes[iterator]])) {\n        node.indexes[iterator] += 1\n        if (!child[isClean]) {\n          child[isClean] = true\n          stack.push(toStack(child))\n          return\n        }\n      }\n      visit.iterator = 0\n      delete node.indexes[iterator]\n    }\n\n    let events = visit.events\n    while (visit.eventIndex < events.length) {\n      let event = events[visit.eventIndex]\n      visit.eventIndex += 1\n      if (event === CHILDREN) {\n        if (node.nodes && node.nodes.length) {\n          node[isClean] = true\n          visit.iterator = node.getIterator()\n        }\n        return\n      } else if (this.listeners[event]) {\n        visit.visitors = this.listeners[event]\n        return\n      }\n    }\n    stack.pop()\n  }\n\n  walkSync(node) {\n    node[isClean] = true\n    let events = getEvents(node)\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node.nodes) {\n          node.each(child => {\n            if (!child[isClean]) this.walkSync(child)\n          })\n        }\n      } else {\n        let visitors = this.listeners[event]\n        if (visitors) {\n          if (this.visitSync(visitors, node.toProxy())) return\n        }\n      }\n    }\n  }\n\n  warnings() {\n    return this.sync().warnings()\n  }\n}\n\nLazyResult.registerPostcss = dependant => {\n  postcss = dependant\n}\n\nmodule.exports = LazyResult\nLazyResult.default = LazyResult\n\nRoot.registerLazyResult(LazyResult)\nDocument.registerLazyResult(LazyResult)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}