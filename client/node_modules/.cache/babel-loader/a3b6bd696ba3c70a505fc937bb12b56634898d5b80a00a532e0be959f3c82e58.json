{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  useCustomJiti: function () {\n    return useCustomJiti;\n  },\n  loadConfig: function () {\n    return loadConfig;\n  }\n});\nconst _jiti = /*#__PURE__*/_interop_require_default(require(\"jiti\"));\nconst _sucrase = require(\"sucrase\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nlet jiti = null;\nfunction useCustomJiti(_jiti) {\n  jiti = _jiti();\n}\nfunction lazyJiti() {\n  return jiti !== null && jiti !== void 0 ? jiti : jiti = (0, _jiti.default)(__filename, {\n    interopDefault: true,\n    transform: opts => {\n      // Sucrase can't transform import.meta so we have to use Babel\n      if (opts.source.includes(\"import.meta\")) {\n        return require(\"jiti/dist/babel.js\")(opts);\n      }\n      return (0, _sucrase.transform)(opts.source, {\n        transforms: [\"typescript\", \"imports\"]\n      });\n    }\n  });\n}\nfunction loadConfig(path) {\n  let config = function () {\n    if (!path) return {};\n    // Always use jiti for now. There is a a bug that occurs in Node v22.12+\n    // where imported files return invalid results\n    return lazyJiti()(path);\n    // Always use jiti for ESM or TS files\n    if (path && (path.endsWith(\".mjs\") || path.endsWith(\".ts\") || path.endsWith(\".cts\") || path.endsWith(\".mts\"))) {\n      return lazyJiti()(path);\n    }\n    try {\n      return path ? require(path) : {};\n    } catch {\n      return lazyJiti()(path);\n    }\n  }();\n  var _config_default;\n  return (_config_default = config.default) !== null && _config_default !== void 0 ? _config_default : config;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","_export","target","all","name","enumerable","get","useCustomJiti","loadConfig","_jiti","_interop_require_default","require","_sucrase","obj","__esModule","default","jiti","lazyJiti","__filename","interopDefault","transform","opts","source","includes","transforms","path","config","endsWith","_config_default"],"sources":["/Users/zeynepbas/Desktop/stackowerflow/node_modules/tailwindcss/lib/lib/load-config.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    useCustomJiti: function() {\n        return useCustomJiti;\n    },\n    loadConfig: function() {\n        return loadConfig;\n    }\n});\nconst _jiti = /*#__PURE__*/ _interop_require_default(require(\"jiti\"));\nconst _sucrase = require(\"sucrase\");\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nlet jiti = null;\nfunction useCustomJiti(_jiti) {\n    jiti = _jiti();\n}\nfunction lazyJiti() {\n    return jiti !== null && jiti !== void 0 ? jiti : jiti = (0, _jiti.default)(__filename, {\n        interopDefault: true,\n        transform: (opts)=>{\n            // Sucrase can't transform import.meta so we have to use Babel\n            if (opts.source.includes(\"import.meta\")) {\n                return require(\"jiti/dist/babel.js\")(opts);\n            }\n            return (0, _sucrase.transform)(opts.source, {\n                transforms: [\n                    \"typescript\",\n                    \"imports\"\n                ]\n            });\n        }\n    });\n}\nfunction loadConfig(path) {\n    let config = function() {\n        if (!path) return {};\n        // Always use jiti for now. There is a a bug that occurs in Node v22.12+\n        // where imported files return invalid results\n        return lazyJiti()(path);\n        // Always use jiti for ESM or TS files\n        if (path && (path.endsWith(\".mjs\") || path.endsWith(\".ts\") || path.endsWith(\".cts\") || path.endsWith(\".mts\"))) {\n            return lazyJiti()(path);\n        }\n        try {\n            return path ? require(path) : {};\n        } catch  {\n            return lazyJiti()(path);\n        }\n    }();\n    var _config_default;\n    return (_config_default = config.default) !== null && _config_default !== void 0 ? _config_default : config;\n}\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EACzCC,KAAK,EAAE;AACX,CAAC,CAAC;AACF,SAASC,OAAOA,CAACC,MAAM,EAAEC,GAAG,EAAE;EAC1B,KAAI,IAAIC,IAAI,IAAID,GAAG,EAACN,MAAM,CAACC,cAAc,CAACI,MAAM,EAAEE,IAAI,EAAE;IACpDC,UAAU,EAAE,IAAI;IAChBC,GAAG,EAAEH,GAAG,CAACC,IAAI;EACjB,CAAC,CAAC;AACN;AACAH,OAAO,CAACF,OAAO,EAAE;EACbQ,aAAa,EAAE,SAAAA,CAAA,EAAW;IACtB,OAAOA,aAAa;EACxB,CAAC;EACDC,UAAU,EAAE,SAAAA,CAAA,EAAW;IACnB,OAAOA,UAAU;EACrB;AACJ,CAAC,CAAC;AACF,MAAMC,KAAK,GAAG,aAAcC,wBAAwB,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;AACrE,MAAMC,QAAQ,GAAGD,OAAO,CAAC,SAAS,CAAC;AACnC,SAASD,wBAAwBA,CAACG,GAAG,EAAE;EACnC,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IACjCE,OAAO,EAAEF;EACb,CAAC;AACL;AACA,IAAIG,IAAI,GAAG,IAAI;AACf,SAAST,aAAaA,CAACE,KAAK,EAAE;EAC1BO,IAAI,GAAGP,KAAK,CAAC,CAAC;AAClB;AACA,SAASQ,QAAQA,CAAA,EAAG;EAChB,OAAOD,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAGA,IAAI,GAAGA,IAAI,GAAG,CAAC,CAAC,EAAEP,KAAK,CAACM,OAAO,EAAEG,UAAU,EAAE;IACnFC,cAAc,EAAE,IAAI;IACpBC,SAAS,EAAGC,IAAI,IAAG;MACf;MACA,IAAIA,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,aAAa,CAAC,EAAE;QACrC,OAAOZ,OAAO,CAAC,oBAAoB,CAAC,CAACU,IAAI,CAAC;MAC9C;MACA,OAAO,CAAC,CAAC,EAAET,QAAQ,CAACQ,SAAS,EAAEC,IAAI,CAACC,MAAM,EAAE;QACxCE,UAAU,EAAE,CACR,YAAY,EACZ,SAAS;MAEjB,CAAC,CAAC;IACN;EACJ,CAAC,CAAC;AACN;AACA,SAAShB,UAAUA,CAACiB,IAAI,EAAE;EACtB,IAAIC,MAAM,GAAG,YAAW;IACpB,IAAI,CAACD,IAAI,EAAE,OAAO,CAAC,CAAC;IACpB;IACA;IACA,OAAOR,QAAQ,CAAC,CAAC,CAACQ,IAAI,CAAC;IACvB;IACA,IAAIA,IAAI,KAAKA,IAAI,CAACE,QAAQ,CAAC,MAAM,CAAC,IAAIF,IAAI,CAACE,QAAQ,CAAC,KAAK,CAAC,IAAIF,IAAI,CAACE,QAAQ,CAAC,MAAM,CAAC,IAAIF,IAAI,CAACE,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE;MAC3G,OAAOV,QAAQ,CAAC,CAAC,CAACQ,IAAI,CAAC;IAC3B;IACA,IAAI;MACA,OAAOA,IAAI,GAAGd,OAAO,CAACc,IAAI,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC,CAAC,MAAO;MACL,OAAOR,QAAQ,CAAC,CAAC,CAACQ,IAAI,CAAC;IAC3B;EACJ,CAAC,CAAC,CAAC;EACH,IAAIG,eAAe;EACnB,OAAO,CAACA,eAAe,GAAGF,MAAM,CAACX,OAAO,MAAM,IAAI,IAAIa,eAAe,KAAK,KAAK,CAAC,GAAGA,eAAe,GAAGF,MAAM;AAC/G","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}