{"ast":null,"code":"import { create } from 'zustand';\nimport axios from 'axios';\nconst useStore = create(set => ({\n  search: \"\",\n  data: [],\n  usersData: [],\n  filteredData: [],\n  user: JSON.parse(localStorage.getItem(\"user\")) || null,\n  firstName: JSON.parse(localStorage.getItem(\"firstName\")),\n  fetchPost: async () => {\n    try {\n      const response = await axios.get('/panel');\n      const fetchedData = response.data;\n      set(state => {\n        const filteredData = fetchedData.filter(item => item.baslik.toLowerCase().includes(state.search.toLowerCase())).reverse();\n        return {\n          data: fetchedData,\n          filteredData: filteredData\n        };\n      });\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  },\n  setSearch: newSearch => {\n    set(state => {\n      const filteredData = state.data.filter(item => item.baslik.toLowerCase().includes(newSearch.toLowerCase())).reverse();\n      return {\n        search: newSearch,\n        filteredData: filteredData\n      };\n    });\n  },\n  fetchUsers: async () => {\n    try {\n      const response = await axios.get(`/users`);\n      set({\n        usersData: response.data\n      });\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  },\n  fetchLike: async (postId, incrementValue) => {\n    try {\n      await axios.put(`/panel/like/${postId}`);\n      set(state => {\n        const updatedPosts = state.filteredData.map(post => post._id === postId ? {\n          ...post,\n          likeCount: incrementValue\n        } : post);\n        return {\n          filteredData: updatedPosts\n        };\n      });\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  },\n  fetchComment: async formData => {\n    try {\n      var _data$result;\n      const user = JSON.parse(localStorage.getItem('user')) || null;\n      if (!user) {\n        console.error('No user found');\n        return;\n      }\n      const data = JSON.parse(localStorage.getItem(\"user\"));\n      const nickName = data === null || data === void 0 ? void 0 : (_data$result = data.result) === null || _data$result === void 0 ? void 0 : _data$result.firstName;\n      const newPost = {\n        ...formData,\n        nickName: nickName\n      };\n      axios.post('/panel', newPost).then(response => {\n        set(state => {\n          const updatedFilteredData = state !== null && state !== void 0 && state.data ? [...state.data, response.data] : [response.data];\n          return {\n            filteredData: updatedFilteredData\n          };\n        });\n      }).catch(error => {\n        console.error('Error submitting comment:', error);\n      });\n    } catch (error) {\n      console.error('Error submitting comment:', error);\n    }\n  },\n  fetchRegister: async formData => {\n    try {\n      const response = await axios.post(\"/uye-ol\", formData);\n      if (response) {\n        localStorage.setItem(\"firstName\", JSON.stringify(response.data.result.firstName));\n      } else {\n        console.error(\"Response data is missing\");\n      }\n    } catch (error) {\n      console.error('Error submitting comment:', error);\n    }\n  },\n  fetchLogin: async formData => {\n    try {\n      const response = await axios.post(\"/signin\", formData);\n      if (response) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        window.location.href = \"/ana-sayfa\";\n      } else {\n        console.error(\"Response data is missing\");\n      }\n    } catch (error) {\n      console.error('Error submitting comment:', error);\n    }\n  },\n  fetchSifre: async formData => {\n    try {\n      var _localEmail$result;\n      const localEmail = JSON.parse(localStorage.getItem(\"user\"));\n      const email = localEmail === null || localEmail === void 0 ? void 0 : (_localEmail$result = localEmail.result) === null || _localEmail$result === void 0 ? void 0 : _localEmail$result.email;\n      if (!email) {\n        console.error(\"Email bilgisi bulunamadı.\");\n        console.log('E-posta bilgisi bulunamadı. Lütfen giriş yapın.');\n        return;\n      }\n      const formDataWithEmail = {\n        ...formData,\n        email\n      };\n      console.log(formDataWithEmail);\n      const response = await axios.put(\"/sifre\", formDataWithEmail);\n      if (response.data.success) {\n        console.log(\"Şifre güncelleme başarılı.\");\n      } else {\n        console.log(\"Şifre güncellenirken bir hata oluştu.\");\n      }\n    } catch (error) {\n      console.error(\"Hata oluştu:\", error);\n      console.log(\"Bir hata oluştu. Lütfen tekrar deneyin.\");\n    }\n  }\n}));\nexport default useStore;","map":{"version":3,"names":["create","axios","useStore","set","search","data","usersData","filteredData","user","JSON","parse","localStorage","getItem","firstName","fetchPost","response","get","fetchedData","state","filter","item","baslik","toLowerCase","includes","reverse","error","console","setSearch","newSearch","fetchUsers","fetchLike","postId","incrementValue","put","updatedPosts","map","post","_id","likeCount","fetchComment","formData","_data$result","nickName","result","newPost","then","updatedFilteredData","catch","fetchRegister","setItem","stringify","fetchLogin","window","location","href","fetchSifre","_localEmail$result","localEmail","email","log","formDataWithEmail","success"],"sources":["/Users/zeynepbas/Documents/GitHub/stack-diyet/client/src/components/useStore.js"],"sourcesContent":["import { create } from 'zustand';\nimport axios from 'axios';\n\nconst useStore = create((set) => ({\n    search: \"\", \n    data: [], \n    usersData: [],\n    filteredData: [], \n    user: JSON.parse(localStorage.getItem(\"user\")) || null,\n    firstName: JSON.parse(localStorage.getItem(\"firstName\")),\n   \n    fetchPost: async () => {\n        try {\n          const response = await axios.get('/panel');\n          const fetchedData = response.data;\n    \n          set((state) => {\n            const filteredData = fetchedData.filter((item) =>\n              item.baslik.toLowerCase().includes(state.search.toLowerCase())\n            ).reverse();\n    \n            return {\n              data: fetchedData,\n              filteredData: filteredData,\n            };\n          });\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      },\n    setSearch: (newSearch) => {\n        set((state) => {\n          const filteredData = state.data\n            .filter((item) =>\n              item.baslik.toLowerCase().includes(newSearch.toLowerCase())\n            )\n            .reverse();\n    \n          return {\n            search: newSearch,\n            filteredData: filteredData,\n          };\n        });\n      },\n\n    fetchUsers: async () => {\n        try {\n            const response = await axios.get(`/users`);\n            set({ usersData: response.data })\n\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    },\n    fetchLike: async (postId, incrementValue) => {\n        try {\n            await axios.put(`/panel/like/${postId}`);\n            set((state) => {\n                const updatedPosts = state.filteredData.map((post) =>\n                    post._id === postId ? { ...post, likeCount: incrementValue } : post\n                );\n                return {\n                    filteredData: updatedPosts,\n                };\n            });\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    },\n    fetchComment: async (formData) => {\n        try {\n\n            const user = JSON.parse(localStorage.getItem('user')) || null;\n\n            \n            if (!user) {\n                console.error('No user found');\n                return;\n            }\n\n\n         \n                const data = JSON.parse(localStorage.getItem(\"user\"))\n\n\n              \n                const nickName = data?.result?.firstName\n\n               \n                const newPost = {\n                    ...formData,    \n                    nickName: nickName, \n                };\n\n\n                axios.post('/panel', newPost)\n                    .then((response) => {\n                       \n                        set((state) => {\n                          \n                            const updatedFilteredData = state?.data ? [...state.data, response.data] : [response.data];\n\n                    \n                            return {\n                                filteredData: updatedFilteredData,\n                            };\n                        });\n                    })\n                    .catch((error) => {\n                        console.error('Error submitting comment:', error);\n                    });\n     \n\n        } catch (error) {\n            console.error('Error submitting comment:', error);\n        }\n    },\n\n    fetchRegister: async (formData) => {\n\n        try {\n            const response = await axios.post(\"/uye-ol\", formData); \n\n\n            if (response) {\n\n                localStorage.setItem(\"firstName\", JSON.stringify(response.data.result.firstName));\n\n            } else {\n                console.error(\"Response data is missing\");\n            }\n        } catch (error) {\n            console.error('Error submitting comment:', error);\n        }\n    },\n    fetchLogin: async (formData) => {\n\n        try {\n            const response = await axios.post(\"/signin\", formData); \n            if (response) {\n\n                localStorage.setItem(\"user\", JSON.stringify(response.data));\n                window.location.href = (\"/ana-sayfa\");\n            } else {\n                console.error(\"Response data is missing\");\n            }\n        } catch (error) {\n            console.error('Error submitting comment:', error);\n        }\n    },\n    fetchSifre: async (formData) => {\n        try {\n          \n            const localEmail = JSON.parse(localStorage.getItem(\"user\"));\n\n           \n            const email = localEmail?.result?.email;\n\n            if (!email) {\n                console.error(\"Email bilgisi bulunamadı.\");\n                console.log('E-posta bilgisi bulunamadı. Lütfen giriş yapın.');\n                return;\n            }\n\n          \n            const formDataWithEmail = { ...formData, email };\n\n            console.log(formDataWithEmail); \n\n            const response = await axios.put(\"/sifre\", formDataWithEmail);\n         \n            if (response.data.success) {\n                console.log(\"Şifre güncelleme başarılı.\");\n\n\n            } else {\n                console.log(\"Şifre güncellenirken bir hata oluştu.\");\n            }\n\n        } catch (error) {\n            console.error(\"Hata oluştu:\", error);\n            console.log(\"Bir hata oluştu. Lütfen tekrar deneyin.\");\n        }\n    }\n\n}));\n\nexport default useStore;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}