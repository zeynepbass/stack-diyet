{"ast":null,"code":"import { create } from 'zustand';\nimport axios from 'axios';\nconst useStore = create(set => ({\n  data: [],\n  // Store the fetched data\n  veri: [],\n  filteredData: [],\n  // Store the filtered data\n  search: \"\",\n  // Store the search term\n  setSearch: searchValue => set({\n    search: searchValue\n  }),\n  firstName: JSON.parse(localStorage.getItem(\"firstName\")) || \"\",\n  fetchPost: async () => {\n    try {\n      const response = await axios.get('http://localhost:6078/panel');\n      const fetchedData = response.data;\n\n      // Get the current search term from state and filter the fetched data\n      set(state => {\n        const filteredData = fetchedData.filter(item => item.baslik.toLowerCase().includes(state.search.toLowerCase()) // Use search from state\n        );\n        return {\n          data: fetchedData,\n          filteredData: filteredData // Store the filtered data\n        };\n      });\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  },\n  // Update search term and filter data accordingly\n  setSearch: newSearch => {\n    set(state => {\n      const filteredData = state.data.filter(item => item.baslik.toLowerCase().includes(newSearch.toLowerCase()) // Filter based on new search term\n      );\n      return {\n        search: newSearch,\n        filteredData: filteredData // Update filtered data\n      };\n    });\n  },\n  fetchLike: async (postId, incrementValue) => {\n    try {\n      await axios.put(`http://localhost:6078/panel/like/${postId}`);\n      set(state => {\n        const updatedPosts = state.filteredData.map(post => post._id === postId ? {\n          ...post,\n          likeCount: incrementValue\n        } : post);\n        return {\n          filteredData: updatedPosts\n        };\n      });\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  },\n  fetchComment: async formData => {\n    try {\n      // `set` fonksiyonu içerisinde `state` parametresi mevcut\n      set(state => {\n        const firstName = state.firstName; // `state` burada parametre olarak geliyor\n        const emailData = {\n          ...formData,\n          acikla: firstName // acikla alanına firstName ekleniyor\n        };\n      });\n      const response = await axios.post(\"http://localhost:6078/panel\", emailData); // POST isteği\n\n      const newPost = response.data; // response'dan yeni post verisini alıyoruz\n\n      // Filtrelenmiş veriyi güncelliyoruz\n      set(state => {\n        const updatedFilteredData = [...state.filteredData, newPost]; // Yeni postu ekliyoruz\n        return {\n          filteredData: updatedFilteredData\n        }; // filteredData'yı güncelliyoruz\n      });\n    } catch (error) {\n      console.error('Error submitting comment:', error);\n    }\n  },\n  fetchRegister: async formData => {\n    try {\n      const response = await axios.post(\"http://localhost:6078/uye-ol\", formData); // Use POST if required by the backend\n\n      if (response) {\n        localStorage.setItem(\"firstName\", JSON.stringify(response.data.result.firstName));\n      } else {\n        console.error(\"Response data is missing\");\n      }\n    } catch (error) {\n      console.error('Error submitting comment:', error);\n    }\n  },\n  fetchLogin: async formData => {\n    try {\n      const response = await axios.post(\"http://localhost:6078/signin\", formData); // Use POST if required by the backend\n      if (response) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      } else {\n        console.error(\"Response data is missing\");\n      }\n    } catch (error) {\n      console.error('Error submitting comment:', error);\n    }\n  },\n  fetchSifre: async formData => {\n    try {\n      var _localEmail$result;\n      // localStorage'dan \"user\" bilgilerini al\n      const localEmail = JSON.parse(localStorage.getItem(\"user\"));\n\n      // localEmail objesinin içinde yer alan email alanını al\n      const email = localEmail === null || localEmail === void 0 ? void 0 : (_localEmail$result = localEmail.result) === null || _localEmail$result === void 0 ? void 0 : _localEmail$result.email;\n      if (!email) {\n        console.error(\"Email bilgisi bulunamadı.\");\n        console.log('E-posta bilgisi bulunamadı. Lütfen giriş yapın.');\n        return;\n      }\n\n      // formData'ya email'i ekle\n      const formDataWithEmail = {\n        ...formData,\n        email\n      };\n      console.log(formDataWithEmail); // Kontrol amacıyla\n\n      const response = await axios.put(\"http://localhost:6078/sifre\", formDataWithEmail);\n      console.log(response); // API'den gelen yanıtı kontrol et\n\n      // API yanıtını kontrol et\n      if (response.data.success) {\n        console.log(\"Şifre güncelleme başarılı.\");\n      } else {\n        console.log(\"Şifre güncellenirken bir hata oluştu.\");\n      }\n    } catch (error) {\n      console.error(\"Hata oluştu:\", error);\n      console.log(\"Bir hata oluştu. Lütfen tekrar deneyin.\");\n    }\n  }\n}));\nexport default useStore;","map":{"version":3,"names":["create","axios","useStore","set","data","veri","filteredData","search","setSearch","searchValue","firstName","JSON","parse","localStorage","getItem","fetchPost","response","get","fetchedData","state","filter","item","baslik","toLowerCase","includes","error","console","newSearch","fetchLike","postId","incrementValue","put","updatedPosts","map","post","_id","likeCount","fetchComment","formData","emailData","acikla","newPost","updatedFilteredData","fetchRegister","setItem","stringify","result","fetchLogin","fetchSifre","_localEmail$result","localEmail","email","log","formDataWithEmail","success"],"sources":["/Users/zeynepbas/Documents/GitHub/stack-diyet/client/src/components/useStore.js"],"sourcesContent":["import { create } from 'zustand';\nimport axios from 'axios';\n\nconst useStore = create((set) => ({\n    data: [],  // Store the fetched data\n    veri: [],\n    filteredData: [], // Store the filtered data\n    search: \"\", // Store the search term\n    setSearch: (searchValue) => set({ search: searchValue }),\n  firstName: JSON.parse(localStorage.getItem(\"firstName\")) || \"\",\n\n    fetchPost: async () => {\n        try {\n            const response = await axios.get('http://localhost:6078/panel');\n            const fetchedData = response.data;\n\n            // Get the current search term from state and filter the fetched data\n            set((state) => {\n                const filteredData = fetchedData.filter((item) =>\n                    item.baslik.toLowerCase().includes(state.search.toLowerCase()) // Use search from state\n                );\n\n                return {\n                    data: fetchedData,\n                    filteredData: filteredData, // Store the filtered data\n                };\n            });\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    },\n\n    // Update search term and filter data accordingly\n    setSearch: (newSearch) => {\n        set((state) => {\n            const filteredData = state.data.filter((item) =>\n                item.baslik.toLowerCase().includes(newSearch.toLowerCase()) // Filter based on new search term\n            );\n            return {\n                search: newSearch,\n                filteredData: filteredData, // Update filtered data\n            };\n        });\n    },\n\n    fetchLike: async (postId, incrementValue) => {\n        try {\n            await axios.put(`http://localhost:6078/panel/like/${postId}`);\n            set((state) => {\n                const updatedPosts = state.filteredData.map((post) =>\n                    post._id === postId ? { ...post, likeCount: incrementValue } : post\n                );\n                return {\n                    filteredData: updatedPosts,\n                };\n            });\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    },\n    fetchComment: async (formData) => {\n        try {\n          // `set` fonksiyonu içerisinde `state` parametresi mevcut\n          set((state) => {\n            const firstName = state.firstName;  // `state` burada parametre olarak geliyor\n            const emailData = { \n              ...formData,\n              acikla: firstName,  // acikla alanına firstName ekleniyor\n            };\n      \n            \n          });\n      \n          const response = await axios.post(\"http://localhost:6078/panel\", emailData);  // POST isteği\n      \n          const newPost = response.data; // response'dan yeni post verisini alıyoruz\n      \n          // Filtrelenmiş veriyi güncelliyoruz\n          set((state) => {\n            const updatedFilteredData = [...state.filteredData, newPost]; // Yeni postu ekliyoruz\n            return { filteredData: updatedFilteredData }; // filteredData'yı güncelliyoruz\n          });\n      \n        } catch (error) {\n          console.error('Error submitting comment:', error);\n        }\n      },\n      \n    fetchRegister: async (formData) => {\n     \n        try {\n           const response= await axios.post(\"http://localhost:6078/uye-ol\", formData); // Use POST if required by the backend\n\n        \n           if (response) {\n       \n             localStorage.setItem(\"firstName\", JSON.stringify(response.data.result.firstName));\n           } else {\n             console.error(\"Response data is missing\");\n           }\n        } catch (error) {\n            console.error('Error submitting comment:', error);\n        }\n    },\n    fetchLogin: async (formData) => {\n     \n        try {\n     const response=  await axios.post(\"http://localhost:6078/signin\", formData); // Use POST if required by the backend\n     if (response) {\n       \n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      } else {\n        console.error(\"Response data is missing\");\n      }\n        } catch (error) {\n            console.error('Error submitting comment:', error);\n        }\n    },\n    fetchSifre: async (formData) => {\n        try {\n            // localStorage'dan \"user\" bilgilerini al\n            const localEmail = JSON.parse(localStorage.getItem(\"user\"));\n            \n            // localEmail objesinin içinde yer alan email alanını al\n            const email = localEmail?.result?.email;\n    \n            if (!email) {\n                console.error(\"Email bilgisi bulunamadı.\");\n                console.log('E-posta bilgisi bulunamadı. Lütfen giriş yapın.');\n                return;\n            }\n    \n            // formData'ya email'i ekle\n            const formDataWithEmail = { ...formData, email };\n    \n            console.log(formDataWithEmail); // Kontrol amacıyla\n    \n            const response = await axios.put(\"http://localhost:6078/sifre\", formDataWithEmail);\n            console.log(response);  // API'den gelen yanıtı kontrol et\n            \n            // API yanıtını kontrol et\n            if (response.data.success) {\n                console.log(\"Şifre güncelleme başarılı.\");\n    \n               \n            } else {\n                console.log(\"Şifre güncellenirken bir hata oluştu.\");\n            }\n    \n        } catch (error) {\n            console.error(\"Hata oluştu:\", error);\n            console.log(\"Bir hata oluştu. Lütfen tekrar deneyin.\");\n        }\n    }\n    \n}));\n\nexport default useStore;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}