{"ast":null,"code":"'use strict';\n\nlet MapGenerator = require('./map-generator');\nlet parse = require('./parse');\nconst Result = require('./result');\nlet stringify = require('./stringify');\nlet warnOnce = require('./warn-once');\nclass NoWorkResult {\n  get content() {\n    return this.result.css;\n  }\n  get css() {\n    return this.result.css;\n  }\n  get map() {\n    return this.result.map;\n  }\n  get messages() {\n    return [];\n  }\n  get opts() {\n    return this.result.opts;\n  }\n  get processor() {\n    return this.result.processor;\n  }\n  get root() {\n    if (this._root) {\n      return this._root;\n    }\n    let root;\n    let parser = parse;\n    try {\n      root = parser(this._css, this._opts);\n    } catch (error) {\n      this.error = error;\n    }\n    if (this.error) {\n      throw this.error;\n    } else {\n      this._root = root;\n      return root;\n    }\n  }\n  get [Symbol.toStringTag]() {\n    return 'NoWorkResult';\n  }\n  constructor(processor, css, opts) {\n    css = css.toString();\n    this.stringified = false;\n    this._processor = processor;\n    this._css = css;\n    this._opts = opts;\n    this._map = undefined;\n    let root;\n    let str = stringify;\n    this.result = new Result(this._processor, root, this._opts);\n    this.result.css = css;\n    let self = this;\n    Object.defineProperty(this.result, 'root', {\n      get() {\n        return self.root;\n      }\n    });\n    let map = new MapGenerator(str, root, this._opts, css);\n    if (map.isMap()) {\n      let [generatedCSS, generatedMap] = map.generate();\n      if (generatedCSS) {\n        this.result.css = generatedCSS;\n      }\n      if (generatedMap) {\n        this.result.map = generatedMap;\n      }\n    } else {\n      map.clearAnnotation();\n      this.result.css = map.css;\n    }\n  }\n  async() {\n    if (this.error) return Promise.reject(this.error);\n    return Promise.resolve(this.result);\n  }\n  catch(onRejected) {\n    return this.async().catch(onRejected);\n  }\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally);\n  }\n  sync() {\n    if (this.error) throw this.error;\n    return this.result;\n  }\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this._opts)) {\n        warnOnce('Without `from` option PostCSS could generate wrong source map ' + 'and will not find Browserslist config. Set it to CSS file path ' + 'or to `undefined` to prevent this warning.');\n      }\n    }\n    return this.async().then(onFulfilled, onRejected);\n  }\n  toString() {\n    return this._css;\n  }\n  warnings() {\n    return [];\n  }\n}\nmodule.exports = NoWorkResult;\nNoWorkResult.default = NoWorkResult;","map":{"version":3,"names":["MapGenerator","require","parse","Result","stringify","warnOnce","NoWorkResult","content","result","css","map","messages","opts","processor","root","_root","parser","_css","_opts","error","Symbol","toStringTag","constructor","toString","stringified","_processor","_map","undefined","str","self","Object","defineProperty","get","isMap","generatedCSS","generatedMap","generate","clearAnnotation","async","Promise","reject","resolve","catch","onRejected","finally","onFinally","then","sync","onFulfilled","process","env","NODE_ENV","warnings","module","exports","default"],"sources":["/Users/zeynepbas/Desktop/stackowerflow/node_modules/postcss/lib/no-work-result.js"],"sourcesContent":["'use strict'\n\nlet MapGenerator = require('./map-generator')\nlet parse = require('./parse')\nconst Result = require('./result')\nlet stringify = require('./stringify')\nlet warnOnce = require('./warn-once')\n\nclass NoWorkResult {\n  get content() {\n    return this.result.css\n  }\n\n  get css() {\n    return this.result.css\n  }\n\n  get map() {\n    return this.result.map\n  }\n\n  get messages() {\n    return []\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get root() {\n    if (this._root) {\n      return this._root\n    }\n\n    let root\n    let parser = parse\n\n    try {\n      root = parser(this._css, this._opts)\n    } catch (error) {\n      this.error = error\n    }\n\n    if (this.error) {\n      throw this.error\n    } else {\n      this._root = root\n      return root\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'NoWorkResult'\n  }\n\n  constructor(processor, css, opts) {\n    css = css.toString()\n    this.stringified = false\n\n    this._processor = processor\n    this._css = css\n    this._opts = opts\n    this._map = undefined\n    let root\n\n    let str = stringify\n    this.result = new Result(this._processor, root, this._opts)\n    this.result.css = css\n\n    let self = this\n    Object.defineProperty(this.result, 'root', {\n      get() {\n        return self.root\n      }\n    })\n\n    let map = new MapGenerator(str, root, this._opts, css)\n    if (map.isMap()) {\n      let [generatedCSS, generatedMap] = map.generate()\n      if (generatedCSS) {\n        this.result.css = generatedCSS\n      }\n      if (generatedMap) {\n        this.result.map = generatedMap\n      }\n    } else {\n      map.clearAnnotation()\n      this.result.css = map.css\n    }\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    return Promise.resolve(this.result)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    return this.result\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this._opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  toString() {\n    return this._css\n  }\n\n  warnings() {\n    return []\n  }\n}\n\nmodule.exports = NoWorkResult\nNoWorkResult.default = NoWorkResult\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}