{"ast":null,"code":"import { create } from 'zustand';\nimport axios from 'axios';\nconst useStore = create(set => ({\n  data: [],\n  // Store the fetched data\n  veri: [],\n  filteredData: [],\n  // Store the filtered data\n\n  firstName: JSON.parse(localStorage.getItem(\"firstName\")) || \"\",\n  fetchPost: async () => {\n    try {\n      // Fetch data from the API\n      const response = await axios.get('http://localhost:6078/panel');\n\n      // Update the store with the fetched data\n      set({\n        filteredData: response.data\n      });\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  },\n  // Update search term and filter data accordingly\n\n  fetchLike: async (postId, incrementValue) => {\n    try {\n      await axios.put(`http://localhost:6078/panel/like/${postId}`);\n      set(state => {\n        const updatedPosts = state.filteredData.map(post => post._id === postId ? {\n          ...post,\n          likeCount: incrementValue\n        } : post);\n        return {\n          filteredData: updatedPosts\n        };\n      });\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  },\n  fetchComment: async formData => {\n    try {\n      // `set` fonksiyonu içerisinde `state` parametresi mevcut\n      set(state => {\n        const firstName = state.firstName; // `state` burada parametre olarak geliyor\n        const emailData = {\n          ...formData,\n          acikla: firstName // acikla alanına firstName ekleniyor\n        };\n\n        // POST isteği\n        const response = axios.post(\"http://localhost:6078/panel\", emailData); // Use POST if required by the backend\n\n        // Eğer response.data yeni postu içeriyorsa\n        response.then(res => {\n          const newPost = res.data; // response'dan yeni post verisini alıyoruz\n\n          // Filtrelenmiş veriyi güncelliyoruz\n          const updatedFilteredData = [...state.filteredData, newPost]; // Yeni postu ekliyoruz\n\n          return {\n            filteredData: updatedFilteredData // filteredData'yı güncelliyoruz\n          };\n        });\n      });\n    } catch (error) {\n      console.error('Error submitting comment:', error);\n    }\n  },\n  fetchRegister: async formData => {\n    try {\n      const response = await axios.post(\"http://localhost:6078/uye-ol\", formData); // Use POST if required by the backend\n\n      if (response) {\n        localStorage.setItem(\"firstName\", JSON.stringify(response.data.result.firstName));\n      } else {\n        console.error(\"Response data is missing\");\n      }\n    } catch (error) {\n      console.error('Error submitting comment:', error);\n    }\n  },\n  fetchLogin: async formData => {\n    try {\n      const response = await axios.post(\"http://localhost:6078/signin\", formData); // Use POST if required by the backend\n      if (response) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      } else {\n        console.error(\"Response data is missing\");\n      }\n    } catch (error) {\n      console.error('Error submitting comment:', error);\n    }\n  },\n  fetchSifre: async formData => {\n    try {\n      var _localEmail$result;\n      // localStorage'dan \"user\" bilgilerini al\n      const localEmail = JSON.parse(localStorage.getItem(\"user\"));\n\n      // localEmail objesinin içinde yer alan email alanını al\n      const email = localEmail === null || localEmail === void 0 ? void 0 : (_localEmail$result = localEmail.result) === null || _localEmail$result === void 0 ? void 0 : _localEmail$result.email;\n      if (!email) {\n        console.error(\"Email bilgisi bulunamadı.\");\n        console.log('E-posta bilgisi bulunamadı. Lütfen giriş yapın.');\n        return;\n      }\n\n      // formData'ya email'i ekle\n      const formDataWithEmail = {\n        ...formData,\n        email\n      };\n      console.log(formDataWithEmail); // Kontrol amacıyla\n\n      const response = await axios.put(\"http://localhost:6078/sifre\", formDataWithEmail);\n      console.log(response); // API'den gelen yanıtı kontrol et\n\n      // API yanıtını kontrol et\n      if (response.data.success) {\n        console.log(\"Şifre güncelleme başarılı.\");\n      } else {\n        console.log(\"Şifre güncellenirken bir hata oluştu.\");\n      }\n    } catch (error) {\n      console.error(\"Hata oluştu:\", error);\n      console.log(\"Bir hata oluştu. Lütfen tekrar deneyin.\");\n    }\n  }\n}));\nexport default useStore;","map":{"version":3,"names":["create","axios","useStore","set","data","veri","filteredData","firstName","JSON","parse","localStorage","getItem","fetchPost","response","get","error","console","fetchLike","postId","incrementValue","put","state","updatedPosts","map","post","_id","likeCount","fetchComment","formData","emailData","acikla","then","res","newPost","updatedFilteredData","fetchRegister","setItem","stringify","result","fetchLogin","fetchSifre","_localEmail$result","localEmail","email","log","formDataWithEmail","success"],"sources":["/Users/zeynepbas/Documents/GitHub/stack-diyet/client/src/components/useStore.js"],"sourcesContent":["import { create } from 'zustand';\nimport axios from 'axios';\n\nconst useStore = create((set) => ({\n    data: [],  // Store the fetched data\n    veri: [],\n    filteredData: [], // Store the filtered data\n\n  firstName: JSON.parse(localStorage.getItem(\"firstName\")) || \"\",\n\n  fetchPost: async () => {\n    try {\n        // Fetch data from the API\n        const response = await axios.get('http://localhost:6078/panel');\n       \n\n        // Update the store with the fetched data\n        set({filteredData:response.data})\n    } catch (error) {\n        console.error('Error fetching data:', error);\n    }\n},\n\n    // Update search term and filter data accordingly\n   \n\n    fetchLike: async (postId, incrementValue) => {\n        try {\n            await axios.put(`http://localhost:6078/panel/like/${postId}`);\n            set((state) => {\n                const updatedPosts = state.filteredData.map((post) =>\n                    post._id === postId ? { ...post, likeCount: incrementValue } : post\n                );\n                return {\n                    filteredData: updatedPosts,\n                };\n            });\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    },\n    fetchComment: async (formData) => {\n        try {\n            // `set` fonksiyonu içerisinde `state` parametresi mevcut\n            set((state) => {\n                const firstName = state.firstName;  // `state` burada parametre olarak geliyor\n                const emailData = { \n                    ...formData,\n                    acikla: firstName,  // acikla alanına firstName ekleniyor\n                };\n                 \n                // POST isteği\n                const response = axios.post(\"http://localhost:6078/panel\", emailData);  // Use POST if required by the backend\n    \n                // Eğer response.data yeni postu içeriyorsa\n                response.then(res => {\n                    const newPost = res.data; // response'dan yeni post verisini alıyoruz\n    \n                    // Filtrelenmiş veriyi güncelliyoruz\n                    const updatedFilteredData = [...state.filteredData, newPost]; // Yeni postu ekliyoruz\n    \n                    return {\n                        filteredData: updatedFilteredData, // filteredData'yı güncelliyoruz\n                    };\n                });\n            });\n        } catch (error) {\n            console.error('Error submitting comment:', error);\n        }\n    },\n    \n    fetchRegister: async (formData) => {\n     \n        try {\n           const response= await axios.post(\"http://localhost:6078/uye-ol\", formData); // Use POST if required by the backend\n\n        \n           if (response) {\n       \n             localStorage.setItem(\"firstName\", JSON.stringify(response.data.result.firstName));\n           } else {\n             console.error(\"Response data is missing\");\n           }\n        } catch (error) {\n            console.error('Error submitting comment:', error);\n        }\n    },\n    fetchLogin: async (formData) => {\n     \n        try {\n     const response=  await axios.post(\"http://localhost:6078/signin\", formData); // Use POST if required by the backend\n     if (response) {\n       \n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      } else {\n        console.error(\"Response data is missing\");\n      }\n        } catch (error) {\n            console.error('Error submitting comment:', error);\n        }\n    },\n    fetchSifre: async (formData) => {\n        try {\n            // localStorage'dan \"user\" bilgilerini al\n            const localEmail = JSON.parse(localStorage.getItem(\"user\"));\n            \n            // localEmail objesinin içinde yer alan email alanını al\n            const email = localEmail?.result?.email;\n    \n            if (!email) {\n                console.error(\"Email bilgisi bulunamadı.\");\n                console.log('E-posta bilgisi bulunamadı. Lütfen giriş yapın.');\n                return;\n            }\n    \n            // formData'ya email'i ekle\n            const formDataWithEmail = { ...formData, email };\n    \n            console.log(formDataWithEmail); // Kontrol amacıyla\n    \n            const response = await axios.put(\"http://localhost:6078/sifre\", formDataWithEmail);\n            console.log(response);  // API'den gelen yanıtı kontrol et\n            \n            // API yanıtını kontrol et\n            if (response.data.success) {\n                console.log(\"Şifre güncelleme başarılı.\");\n    \n               \n            } else {\n                console.log(\"Şifre güncellenirken bir hata oluştu.\");\n            }\n    \n        } catch (error) {\n            console.error(\"Hata oluştu:\", error);\n            console.log(\"Bir hata oluştu. Lütfen tekrar deneyin.\");\n        }\n    }\n    \n}));\n\nexport default useStore;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}