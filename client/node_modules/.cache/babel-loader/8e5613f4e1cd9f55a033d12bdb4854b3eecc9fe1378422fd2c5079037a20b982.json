{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  normalize: function () {\n    return normalize;\n  },\n  normalizeAttributeSelectors: function () {\n    return normalizeAttributeSelectors;\n  },\n  url: function () {\n    return url;\n  },\n  number: function () {\n    return number;\n  },\n  percentage: function () {\n    return percentage;\n  },\n  length: function () {\n    return length;\n  },\n  lineWidth: function () {\n    return lineWidth;\n  },\n  shadow: function () {\n    return shadow;\n  },\n  color: function () {\n    return color;\n  },\n  image: function () {\n    return image;\n  },\n  gradient: function () {\n    return gradient;\n  },\n  position: function () {\n    return position;\n  },\n  familyName: function () {\n    return familyName;\n  },\n  genericName: function () {\n    return genericName;\n  },\n  absoluteSize: function () {\n    return absoluteSize;\n  },\n  relativeSize: function () {\n    return relativeSize;\n  }\n});\nconst _color = require(\"./color\");\nconst _parseBoxShadowValue = require(\"./parseBoxShadowValue\");\nconst _splitAtTopLevelOnly = require(\"./splitAtTopLevelOnly\");\nlet cssFunctions = [\"min\", \"max\", \"clamp\", \"calc\"];\n// Ref: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Types\nfunction isCSSFunction(value) {\n  return cssFunctions.some(fn => new RegExp(`^${fn}\\\\(.*\\\\)`).test(value));\n}\n// These properties accept a `<dashed-ident>` as one of the values. This means that you can use them\n// as: `timeline-scope: --tl;`\n//\n// Without the `var(--tl)`, in these cases we don't want to normalize the value, and you should add\n// the `var()` yourself.\n//\n// More info:\n// - https://drafts.csswg.org/scroll-animations/#propdef-timeline-scope\n// - https://developer.mozilla.org/en-US/docs/Web/CSS/timeline-scope#dashed-ident\n// - https://www.w3.org/TR/css-anchor-position-1\n//\nconst AUTO_VAR_INJECTION_EXCEPTIONS = new Set([\n// Concrete properties\n\"scroll-timeline-name\", \"timeline-scope\", \"view-timeline-name\", \"font-palette\", \"anchor-name\", \"anchor-scope\", \"position-anchor\", \"position-try-options\",\n// Shorthand properties\n\"scroll-timeline\", \"animation-timeline\", \"view-timeline\", \"position-try\"]);\nfunction normalize(value, context = null, isRoot = true) {\n  let isVarException = context && AUTO_VAR_INJECTION_EXCEPTIONS.has(context.property);\n  if (value.startsWith(\"--\") && !isVarException) {\n    return `var(${value})`;\n  }\n  // Keep raw strings if it starts with `url(`\n  if (value.includes(\"url(\")) {\n    return value.split(/(url\\(.*?\\))/g).filter(Boolean).map(part => {\n      if (/^url\\(.*?\\)$/.test(part)) {\n        return part;\n      }\n      return normalize(part, context, false);\n    }).join(\"\");\n  }\n  // Convert `_` to ` `, except for escaped underscores `\\_`\n  value = value.replace(/([^\\\\])_+/g, (fullMatch, characterBefore) => characterBefore + \" \".repeat(fullMatch.length - 1)).replace(/^_/g, \" \").replace(/\\\\_/g, \"_\");\n  // Remove leftover whitespace\n  if (isRoot) {\n    value = value.trim();\n  }\n  value = normalizeMathOperatorSpacing(value);\n  return value;\n}\nfunction normalizeAttributeSelectors(value) {\n  // Wrap values in attribute selectors with quotes\n  if (value.includes(\"=\")) {\n    value = value.replace(/(=.*)/g, (_fullMatch, match) => {\n      if (match[1] === \"'\" || match[1] === '\"') {\n        return match;\n      }\n      // Handle regex flags on unescaped values\n      if (match.length > 2) {\n        let trailingCharacter = match[match.length - 1];\n        if (match[match.length - 2] === \" \" && (trailingCharacter === \"i\" || trailingCharacter === \"I\" || trailingCharacter === \"s\" || trailingCharacter === \"S\")) {\n          return `=\"${match.slice(1, -2)}\" ${match[match.length - 1]}`;\n        }\n      }\n      return `=\"${match.slice(1)}\"`;\n    });\n  }\n  return value;\n}\n/**\n * Add spaces around operators inside math functions\n * like calc() that do not follow an operator, '(', or `,`.\n *\n * @param {string} value\n * @returns {string}\n */\nfunction normalizeMathOperatorSpacing(value) {\n  let preventFormattingInFunctions = [\"theme\"];\n  let preventFormattingKeywords = [\"min-content\", \"max-content\", \"fit-content\",\n  // Env\n  \"safe-area-inset-top\", \"safe-area-inset-right\", \"safe-area-inset-bottom\", \"safe-area-inset-left\", \"titlebar-area-x\", \"titlebar-area-y\", \"titlebar-area-width\", \"titlebar-area-height\", \"keyboard-inset-top\", \"keyboard-inset-right\", \"keyboard-inset-bottom\", \"keyboard-inset-left\", \"keyboard-inset-width\", \"keyboard-inset-height\", \"radial-gradient\", \"linear-gradient\", \"conic-gradient\", \"repeating-radial-gradient\", \"repeating-linear-gradient\", \"repeating-conic-gradient\", \"anchor-size\"];\n  return value.replace(/(calc|min|max|clamp)\\(.+\\)/g, match => {\n    let result = \"\";\n    function lastChar() {\n      let char = result.trimEnd();\n      return char[char.length - 1];\n    }\n    for (let i = 0; i < match.length; i++) {\n      function peek(word) {\n        return word.split(\"\").every((char, j) => match[i + j] === char);\n      }\n      function consumeUntil(chars) {\n        let minIndex = Infinity;\n        for (let char of chars) {\n          let index = match.indexOf(char, i);\n          if (index !== -1 && index < minIndex) {\n            minIndex = index;\n          }\n        }\n        let result = match.slice(i, minIndex);\n        i += result.length - 1;\n        return result;\n      }\n      let char = match[i];\n      // Handle `var(--variable)`\n      if (peek(\"var\")) {\n        // When we consume until `)`, then we are dealing with this scenario:\n        //   `var(--example)`\n        //\n        // When we consume until `,`, then we are dealing with this scenario:\n        //   `var(--example, 1rem)`\n        //\n        //   In this case we do want to \"format\", the default value as well\n        result += consumeUntil([\")\", \",\"]);\n      } else if (preventFormattingKeywords.some(keyword => peek(keyword))) {\n        let keyword = preventFormattingKeywords.find(keyword => peek(keyword));\n        result += keyword;\n        i += keyword.length - 1;\n      } else if (preventFormattingInFunctions.some(fn => peek(fn))) {\n        result += consumeUntil([\")\"]);\n      } else if (peek(\"[\")) {\n        result += consumeUntil([\"]\"]);\n      } else if ([\"+\", \"-\", \"*\", \"/\"].includes(char) && ![\"(\", \"+\", \"-\", \"*\", \"/\", \",\"].includes(lastChar())) {\n        result += ` ${char} `;\n      } else {\n        result += char;\n      }\n    }\n    // Simplify multiple spaces\n    return result.replace(/\\s+/g, \" \");\n  });\n}\nfunction url(value) {\n  return value.startsWith(\"url(\");\n}\nfunction number(value) {\n  return !isNaN(Number(value)) || isCSSFunction(value);\n}\nfunction percentage(value) {\n  return value.endsWith(\"%\") && number(value.slice(0, -1)) || isCSSFunction(value);\n}\n// Please refer to MDN when updating this list:\n// https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units\n// https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Container_Queries#container_query_length_units\nlet lengthUnits = [\"cm\", \"mm\", \"Q\", \"in\", \"pc\", \"pt\", \"px\", \"em\", \"ex\", \"ch\", \"rem\", \"lh\", \"rlh\", \"vw\", \"vh\", \"vmin\", \"vmax\", \"vb\", \"vi\", \"svw\", \"svh\", \"lvw\", \"lvh\", \"dvw\", \"dvh\", \"cqw\", \"cqh\", \"cqi\", \"cqb\", \"cqmin\", \"cqmax\"];\nlet lengthUnitsPattern = `(?:${lengthUnits.join(\"|\")})`;\nfunction length(value) {\n  return value === \"0\" || new RegExp(`^[+-]?[0-9]*\\.?[0-9]+(?:[eE][+-]?[0-9]+)?${lengthUnitsPattern}$`).test(value) || isCSSFunction(value);\n}\nlet lineWidths = new Set([\"thin\", \"medium\", \"thick\"]);\nfunction lineWidth(value) {\n  return lineWidths.has(value);\n}\nfunction shadow(value) {\n  let parsedShadows = (0, _parseBoxShadowValue.parseBoxShadowValue)(normalize(value));\n  for (let parsedShadow of parsedShadows) {\n    if (!parsedShadow.valid) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction color(value) {\n  let colors = 0;\n  let result = (0, _splitAtTopLevelOnly.splitAtTopLevelOnly)(value, \"_\").every(part => {\n    part = normalize(part);\n    if (part.startsWith(\"var(\")) return true;\n    if ((0, _color.parseColor)(part, {\n      loose: true\n    }) !== null) return colors++, true;\n    return false;\n  });\n  if (!result) return false;\n  return colors > 0;\n}\nfunction image(value) {\n  let images = 0;\n  let result = (0, _splitAtTopLevelOnly.splitAtTopLevelOnly)(value, \",\").every(part => {\n    part = normalize(part);\n    if (part.startsWith(\"var(\")) return true;\n    if (url(part) || gradient(part) || [\"element(\", \"image(\", \"cross-fade(\", \"image-set(\"].some(fn => part.startsWith(fn))) {\n      images++;\n      return true;\n    }\n    return false;\n  });\n  if (!result) return false;\n  return images > 0;\n}\nlet gradientTypes = new Set([\"conic-gradient\", \"linear-gradient\", \"radial-gradient\", \"repeating-conic-gradient\", \"repeating-linear-gradient\", \"repeating-radial-gradient\"]);\nfunction gradient(value) {\n  value = normalize(value);\n  for (let type of gradientTypes) {\n    if (value.startsWith(`${type}(`)) {\n      return true;\n    }\n  }\n  return false;\n}\nlet validPositions = new Set([\"center\", \"top\", \"right\", \"bottom\", \"left\"]);\nfunction position(value) {\n  let positions = 0;\n  let result = (0, _splitAtTopLevelOnly.splitAtTopLevelOnly)(value, \"_\").every(part => {\n    part = normalize(part);\n    if (part.startsWith(\"var(\")) return true;\n    if (validPositions.has(part) || length(part) || percentage(part)) {\n      positions++;\n      return true;\n    }\n    return false;\n  });\n  if (!result) return false;\n  return positions > 0;\n}\nfunction familyName(value) {\n  let fonts = 0;\n  let result = (0, _splitAtTopLevelOnly.splitAtTopLevelOnly)(value, \",\").every(part => {\n    part = normalize(part);\n    if (part.startsWith(\"var(\")) return true;\n    // If it contains spaces, then it should be quoted\n    if (part.includes(\" \")) {\n      if (!/(['\"])([^\"']+)\\1/g.test(part)) {\n        return false;\n      }\n    }\n    // If it starts with a number, it's invalid\n    if (/^\\d/g.test(part)) {\n      return false;\n    }\n    fonts++;\n    return true;\n  });\n  if (!result) return false;\n  return fonts > 0;\n}\nlet genericNames = new Set([\"serif\", \"sans-serif\", \"monospace\", \"cursive\", \"fantasy\", \"system-ui\", \"ui-serif\", \"ui-sans-serif\", \"ui-monospace\", \"ui-rounded\", \"math\", \"emoji\", \"fangsong\"]);\nfunction genericName(value) {\n  return genericNames.has(value);\n}\nlet absoluteSizes = new Set([\"xx-small\", \"x-small\", \"small\", \"medium\", \"large\", \"x-large\", \"xx-large\", \"xxx-large\"]);\nfunction absoluteSize(value) {\n  return absoluteSizes.has(value);\n}\nlet relativeSizes = new Set([\"larger\", \"smaller\"]);\nfunction relativeSize(value) {\n  return relativeSizes.has(value);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","_export","target","all","name","enumerable","get","normalize","normalizeAttributeSelectors","url","number","percentage","length","lineWidth","shadow","color","image","gradient","position","familyName","genericName","absoluteSize","relativeSize","_color","require","_parseBoxShadowValue","_splitAtTopLevelOnly","cssFunctions","isCSSFunction","some","fn","RegExp","test","AUTO_VAR_INJECTION_EXCEPTIONS","Set","context","isRoot","isVarException","has","property","startsWith","includes","split","filter","Boolean","map","part","join","replace","fullMatch","characterBefore","repeat","trim","normalizeMathOperatorSpacing","_fullMatch","match","trailingCharacter","slice","preventFormattingInFunctions","preventFormattingKeywords","result","lastChar","char","trimEnd","i","peek","word","every","j","consumeUntil","chars","minIndex","Infinity","index","indexOf","keyword","find","isNaN","Number","endsWith","lengthUnits","lengthUnitsPattern","lineWidths","parsedShadows","parseBoxShadowValue","parsedShadow","valid","colors","splitAtTopLevelOnly","parseColor","loose","images","gradientTypes","type","validPositions","positions","fonts","genericNames","absoluteSizes","relativeSizes"],"sources":["/Users/zeynepbas/Desktop/stackowerflow/node_modules/tailwindcss/lib/util/dataTypes.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    normalize: function() {\n        return normalize;\n    },\n    normalizeAttributeSelectors: function() {\n        return normalizeAttributeSelectors;\n    },\n    url: function() {\n        return url;\n    },\n    number: function() {\n        return number;\n    },\n    percentage: function() {\n        return percentage;\n    },\n    length: function() {\n        return length;\n    },\n    lineWidth: function() {\n        return lineWidth;\n    },\n    shadow: function() {\n        return shadow;\n    },\n    color: function() {\n        return color;\n    },\n    image: function() {\n        return image;\n    },\n    gradient: function() {\n        return gradient;\n    },\n    position: function() {\n        return position;\n    },\n    familyName: function() {\n        return familyName;\n    },\n    genericName: function() {\n        return genericName;\n    },\n    absoluteSize: function() {\n        return absoluteSize;\n    },\n    relativeSize: function() {\n        return relativeSize;\n    }\n});\nconst _color = require(\"./color\");\nconst _parseBoxShadowValue = require(\"./parseBoxShadowValue\");\nconst _splitAtTopLevelOnly = require(\"./splitAtTopLevelOnly\");\nlet cssFunctions = [\n    \"min\",\n    \"max\",\n    \"clamp\",\n    \"calc\"\n];\n// Ref: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Types\nfunction isCSSFunction(value) {\n    return cssFunctions.some((fn)=>new RegExp(`^${fn}\\\\(.*\\\\)`).test(value));\n}\n// These properties accept a `<dashed-ident>` as one of the values. This means that you can use them\n// as: `timeline-scope: --tl;`\n//\n// Without the `var(--tl)`, in these cases we don't want to normalize the value, and you should add\n// the `var()` yourself.\n//\n// More info:\n// - https://drafts.csswg.org/scroll-animations/#propdef-timeline-scope\n// - https://developer.mozilla.org/en-US/docs/Web/CSS/timeline-scope#dashed-ident\n// - https://www.w3.org/TR/css-anchor-position-1\n//\nconst AUTO_VAR_INJECTION_EXCEPTIONS = new Set([\n    // Concrete properties\n    \"scroll-timeline-name\",\n    \"timeline-scope\",\n    \"view-timeline-name\",\n    \"font-palette\",\n    \"anchor-name\",\n    \"anchor-scope\",\n    \"position-anchor\",\n    \"position-try-options\",\n    // Shorthand properties\n    \"scroll-timeline\",\n    \"animation-timeline\",\n    \"view-timeline\",\n    \"position-try\"\n]);\nfunction normalize(value, context = null, isRoot = true) {\n    let isVarException = context && AUTO_VAR_INJECTION_EXCEPTIONS.has(context.property);\n    if (value.startsWith(\"--\") && !isVarException) {\n        return `var(${value})`;\n    }\n    // Keep raw strings if it starts with `url(`\n    if (value.includes(\"url(\")) {\n        return value.split(/(url\\(.*?\\))/g).filter(Boolean).map((part)=>{\n            if (/^url\\(.*?\\)$/.test(part)) {\n                return part;\n            }\n            return normalize(part, context, false);\n        }).join(\"\");\n    }\n    // Convert `_` to ` `, except for escaped underscores `\\_`\n    value = value.replace(/([^\\\\])_+/g, (fullMatch, characterBefore)=>characterBefore + \" \".repeat(fullMatch.length - 1)).replace(/^_/g, \" \").replace(/\\\\_/g, \"_\");\n    // Remove leftover whitespace\n    if (isRoot) {\n        value = value.trim();\n    }\n    value = normalizeMathOperatorSpacing(value);\n    return value;\n}\nfunction normalizeAttributeSelectors(value) {\n    // Wrap values in attribute selectors with quotes\n    if (value.includes(\"=\")) {\n        value = value.replace(/(=.*)/g, (_fullMatch, match)=>{\n            if (match[1] === \"'\" || match[1] === '\"') {\n                return match;\n            }\n            // Handle regex flags on unescaped values\n            if (match.length > 2) {\n                let trailingCharacter = match[match.length - 1];\n                if (match[match.length - 2] === \" \" && (trailingCharacter === \"i\" || trailingCharacter === \"I\" || trailingCharacter === \"s\" || trailingCharacter === \"S\")) {\n                    return `=\"${match.slice(1, -2)}\" ${match[match.length - 1]}`;\n                }\n            }\n            return `=\"${match.slice(1)}\"`;\n        });\n    }\n    return value;\n}\n/**\n * Add spaces around operators inside math functions\n * like calc() that do not follow an operator, '(', or `,`.\n *\n * @param {string} value\n * @returns {string}\n */ function normalizeMathOperatorSpacing(value) {\n    let preventFormattingInFunctions = [\n        \"theme\"\n    ];\n    let preventFormattingKeywords = [\n        \"min-content\",\n        \"max-content\",\n        \"fit-content\",\n        // Env\n        \"safe-area-inset-top\",\n        \"safe-area-inset-right\",\n        \"safe-area-inset-bottom\",\n        \"safe-area-inset-left\",\n        \"titlebar-area-x\",\n        \"titlebar-area-y\",\n        \"titlebar-area-width\",\n        \"titlebar-area-height\",\n        \"keyboard-inset-top\",\n        \"keyboard-inset-right\",\n        \"keyboard-inset-bottom\",\n        \"keyboard-inset-left\",\n        \"keyboard-inset-width\",\n        \"keyboard-inset-height\",\n        \"radial-gradient\",\n        \"linear-gradient\",\n        \"conic-gradient\",\n        \"repeating-radial-gradient\",\n        \"repeating-linear-gradient\",\n        \"repeating-conic-gradient\",\n        \"anchor-size\"\n    ];\n    return value.replace(/(calc|min|max|clamp)\\(.+\\)/g, (match)=>{\n        let result = \"\";\n        function lastChar() {\n            let char = result.trimEnd();\n            return char[char.length - 1];\n        }\n        for(let i = 0; i < match.length; i++){\n            function peek(word) {\n                return word.split(\"\").every((char, j)=>match[i + j] === char);\n            }\n            function consumeUntil(chars) {\n                let minIndex = Infinity;\n                for (let char of chars){\n                    let index = match.indexOf(char, i);\n                    if (index !== -1 && index < minIndex) {\n                        minIndex = index;\n                    }\n                }\n                let result = match.slice(i, minIndex);\n                i += result.length - 1;\n                return result;\n            }\n            let char = match[i];\n            // Handle `var(--variable)`\n            if (peek(\"var\")) {\n                // When we consume until `)`, then we are dealing with this scenario:\n                //   `var(--example)`\n                //\n                // When we consume until `,`, then we are dealing with this scenario:\n                //   `var(--example, 1rem)`\n                //\n                //   In this case we do want to \"format\", the default value as well\n                result += consumeUntil([\n                    \")\",\n                    \",\"\n                ]);\n            } else if (preventFormattingKeywords.some((keyword)=>peek(keyword))) {\n                let keyword = preventFormattingKeywords.find((keyword)=>peek(keyword));\n                result += keyword;\n                i += keyword.length - 1;\n            } else if (preventFormattingInFunctions.some((fn)=>peek(fn))) {\n                result += consumeUntil([\n                    \")\"\n                ]);\n            } else if (peek(\"[\")) {\n                result += consumeUntil([\n                    \"]\"\n                ]);\n            } else if ([\n                \"+\",\n                \"-\",\n                \"*\",\n                \"/\"\n            ].includes(char) && ![\n                \"(\",\n                \"+\",\n                \"-\",\n                \"*\",\n                \"/\",\n                \",\"\n            ].includes(lastChar())) {\n                result += ` ${char} `;\n            } else {\n                result += char;\n            }\n        }\n        // Simplify multiple spaces\n        return result.replace(/\\s+/g, \" \");\n    });\n}\nfunction url(value) {\n    return value.startsWith(\"url(\");\n}\nfunction number(value) {\n    return !isNaN(Number(value)) || isCSSFunction(value);\n}\nfunction percentage(value) {\n    return value.endsWith(\"%\") && number(value.slice(0, -1)) || isCSSFunction(value);\n}\n// Please refer to MDN when updating this list:\n// https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units\n// https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Container_Queries#container_query_length_units\nlet lengthUnits = [\n    \"cm\",\n    \"mm\",\n    \"Q\",\n    \"in\",\n    \"pc\",\n    \"pt\",\n    \"px\",\n    \"em\",\n    \"ex\",\n    \"ch\",\n    \"rem\",\n    \"lh\",\n    \"rlh\",\n    \"vw\",\n    \"vh\",\n    \"vmin\",\n    \"vmax\",\n    \"vb\",\n    \"vi\",\n    \"svw\",\n    \"svh\",\n    \"lvw\",\n    \"lvh\",\n    \"dvw\",\n    \"dvh\",\n    \"cqw\",\n    \"cqh\",\n    \"cqi\",\n    \"cqb\",\n    \"cqmin\",\n    \"cqmax\"\n];\nlet lengthUnitsPattern = `(?:${lengthUnits.join(\"|\")})`;\nfunction length(value) {\n    return value === \"0\" || new RegExp(`^[+-]?[0-9]*\\.?[0-9]+(?:[eE][+-]?[0-9]+)?${lengthUnitsPattern}$`).test(value) || isCSSFunction(value);\n}\nlet lineWidths = new Set([\n    \"thin\",\n    \"medium\",\n    \"thick\"\n]);\nfunction lineWidth(value) {\n    return lineWidths.has(value);\n}\nfunction shadow(value) {\n    let parsedShadows = (0, _parseBoxShadowValue.parseBoxShadowValue)(normalize(value));\n    for (let parsedShadow of parsedShadows){\n        if (!parsedShadow.valid) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction color(value) {\n    let colors = 0;\n    let result = (0, _splitAtTopLevelOnly.splitAtTopLevelOnly)(value, \"_\").every((part)=>{\n        part = normalize(part);\n        if (part.startsWith(\"var(\")) return true;\n        if ((0, _color.parseColor)(part, {\n            loose: true\n        }) !== null) return colors++, true;\n        return false;\n    });\n    if (!result) return false;\n    return colors > 0;\n}\nfunction image(value) {\n    let images = 0;\n    let result = (0, _splitAtTopLevelOnly.splitAtTopLevelOnly)(value, \",\").every((part)=>{\n        part = normalize(part);\n        if (part.startsWith(\"var(\")) return true;\n        if (url(part) || gradient(part) || [\n            \"element(\",\n            \"image(\",\n            \"cross-fade(\",\n            \"image-set(\"\n        ].some((fn)=>part.startsWith(fn))) {\n            images++;\n            return true;\n        }\n        return false;\n    });\n    if (!result) return false;\n    return images > 0;\n}\nlet gradientTypes = new Set([\n    \"conic-gradient\",\n    \"linear-gradient\",\n    \"radial-gradient\",\n    \"repeating-conic-gradient\",\n    \"repeating-linear-gradient\",\n    \"repeating-radial-gradient\"\n]);\nfunction gradient(value) {\n    value = normalize(value);\n    for (let type of gradientTypes){\n        if (value.startsWith(`${type}(`)) {\n            return true;\n        }\n    }\n    return false;\n}\nlet validPositions = new Set([\n    \"center\",\n    \"top\",\n    \"right\",\n    \"bottom\",\n    \"left\"\n]);\nfunction position(value) {\n    let positions = 0;\n    let result = (0, _splitAtTopLevelOnly.splitAtTopLevelOnly)(value, \"_\").every((part)=>{\n        part = normalize(part);\n        if (part.startsWith(\"var(\")) return true;\n        if (validPositions.has(part) || length(part) || percentage(part)) {\n            positions++;\n            return true;\n        }\n        return false;\n    });\n    if (!result) return false;\n    return positions > 0;\n}\nfunction familyName(value) {\n    let fonts = 0;\n    let result = (0, _splitAtTopLevelOnly.splitAtTopLevelOnly)(value, \",\").every((part)=>{\n        part = normalize(part);\n        if (part.startsWith(\"var(\")) return true;\n        // If it contains spaces, then it should be quoted\n        if (part.includes(\" \")) {\n            if (!/(['\"])([^\"']+)\\1/g.test(part)) {\n                return false;\n            }\n        }\n        // If it starts with a number, it's invalid\n        if (/^\\d/g.test(part)) {\n            return false;\n        }\n        fonts++;\n        return true;\n    });\n    if (!result) return false;\n    return fonts > 0;\n}\nlet genericNames = new Set([\n    \"serif\",\n    \"sans-serif\",\n    \"monospace\",\n    \"cursive\",\n    \"fantasy\",\n    \"system-ui\",\n    \"ui-serif\",\n    \"ui-sans-serif\",\n    \"ui-monospace\",\n    \"ui-rounded\",\n    \"math\",\n    \"emoji\",\n    \"fangsong\"\n]);\nfunction genericName(value) {\n    return genericNames.has(value);\n}\nlet absoluteSizes = new Set([\n    \"xx-small\",\n    \"x-small\",\n    \"small\",\n    \"medium\",\n    \"large\",\n    \"x-large\",\n    \"xx-large\",\n    \"xxx-large\"\n]);\nfunction absoluteSize(value) {\n    return absoluteSizes.has(value);\n}\nlet relativeSizes = new Set([\n    \"larger\",\n    \"smaller\"\n]);\nfunction relativeSize(value) {\n    return relativeSizes.has(value);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}